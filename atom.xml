<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>isKage`Blog</title>
  
  <subtitle>Welcome to isKage Blog :)</subtitle>
  <link href="https://blog.iskage.online/atom.xml" rel="self"/>
  
  <link href="https://blog.iskage.online/"/>
  <updated>2025-02-05T07:44:43.268Z</updated>
  <id>https://blog.iskage.online/</id>
  
  <author>
    <name>isKage</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL 自学笔记（1）如何安装 MySQL</title>
    <link href="https://blog.iskage.online/posts/8b09a768.html"/>
    <id>https://blog.iskage.online/posts/8b09a768.html</id>
    <published>2025-02-05T07:42:00.000Z</published>
    <updated>2025-02-05T07:44:43.268Z</updated>
    
    <content type="html"><![CDATA[<h1>详细教程：如何安装 MySQL</h1><p>MySQL 是数据库管理系统 DSMS 之一，本文介绍如何 <strong>下载、安装、配置、登陆、使用</strong> MySQL</p><h2 id="1-下载">1 下载</h2><ol><li>前往官网：<a href="https://www.mysql.com">https://www.mysql.com</a></li><li>点击 - <a href="https://www.mysql.com/downloads/">Downloads</a></li></ol><p>点击 - <a href="https://dev.mysql.com/downloads/">MySQL Community (GPL) Downloads</a></p><p>社区版免费，且功能近似，适合学习使用。</p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/QQ_1738735763767.png" alt=""></p><ol start="3"><li>点击 - <a href="https://dev.mysql.com/downloads/mysql/">MySQL Community Server</a></li></ol><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/QQ_1738735912017.png" alt=""></p><ol start="4"><li>选择版本</li></ol><p>推荐使用 <code>8.0.x</code> 版本，相比旧版本 <code>5.0.x</code> 更为完善。点击 - <a href="https://dev.mysql.com/downloads/windows/installer/8.0.html">Go to Download Page</a></p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/QQ_1738736158523.png" alt=""></p><p>选择 <code>.msi</code> 的安装程序。选择图中的程序下载，配有图形化安装流程，支持离线安装。</p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/QQ_1738736235034.png" alt=""></p><blockquote><p>注：下载需要注册 ORACLE 甲骨文公司账户</p></blockquote><h2 id="2-安装">2 安装</h2><ol><li>找到文件 <code>mysql-installer-community-8.0.41.0.msi</code> ，双击进入安装。</li><li>在 [Choosing a Setup Type] - 窗口中选择 自定义安装 [Custom]</li></ol><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/6fb510a37d115e06be126a4e7bde91eb.png" alt=""></p><ol start="3"><li>在 [Select Products] 窗口中，选择产品。从左边选择想要安装的产品，而后显示在右边。</li></ol><blockquote><p>注：如想自定义安装路径，见后。</p></blockquote><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/0dddb331420bff1755778e44b880e51b_720.png" alt=""></p><p>自定义安装路径，则需要选择产品，点击 [Advanced Options]</p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/ba921bd680af66e88223a0b7e3720285_720.png" alt=""></p><ol start="4"><li>在 [Installation] 窗口，点击 [Execute] 开始安装</li></ol><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/f32f54e134c74322b24711806c2996ce_720.png" alt=""></p><p>安装完成点击 [Next]</p><ol start="5"><li>在 [Product Configuration] 窗口，开始配置，点击 [Next]</li></ol><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/29078465616e9aff29a15b4119d4f07a_720.png" alt=""></p><p>保持默认即可，点击 [Next]</p><p>[Config Type] 为主机类型，[Port: 3306] 为端口号</p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/9bcda347f6bbca58df8843f38c178a78_720.png" alt=""></p><ol start="6"><li>在 [Authentication Method] 窗口，可以设置授权方式。默认，直接点击 [Next]</li></ol><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/f1754354d7e0302717a9c1fc4c528c02_720.png" alt=""></p><ol start="7"><li>在 [Accounts and Roles] 界面设置管理员密码。用于登陆 MySQL 服务</li></ol><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/dfb3117e767af332e6b2822ff27a0654_720.png" alt=""></p><ol start="8"><li>在 [Windows Service] 界面设置 [服务] ，保持默认即可。</li></ol><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/d3129dd2ba331425f9e7892a0b81b087_720.png" alt=""></p><ol start="9"><li>在 [Server File Permissions] 中授权，保持默认即可</li></ol><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/33bcd45652a5178ddd35788211bbfc93_720.png" alt=""></p><ol start="10"><li>在 [Apply Configuration] 点击 [Execute] 执行之前的配置</li></ol><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/79ce3831a4322e41691869175c54a604_720.png" alt=""></p><p>点击 [Finish] 完成配置</p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/e7357753070eaa02ec50024aa28556a2_720.png" alt=""></p><ol start="11"><li>完成安装</li></ol><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/40579a68dcdadf9f09e6c3c517e83525_720.png" alt=""></p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/494e644125931e21cf86124bb5e9d67c.png" alt=""></p><h2 id="3-环境变量">3 环境变量</h2><p>没有配置 MySQL 到环境变量中，终端无法运行 MySQL 命令。</p><ol><li>右键 [此电脑] ，选择 [属性]</li><li>打开 [系统] 窗口，点击 [高级系统设置]</li></ol><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/4ba1d54ca6830505fae9a8bc721ad076_720.png" alt=""></p><ol start="3"><li>打开 [系统属性] ，选择 [高级] 选项，点击 [环境变量]</li><li>在 [环境变量] 窗口，选择 [path]</li><li>点击 [编辑] ，在 [编辑环境变量] 窗口中，将 MySQL 的 bin 目录添加进去，使用分号 <code>;</code> 划分</li></ol><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/3648923a3ca1b07903f3e18b967dd1f9.png" alt=""></p><p>输入 MySQL 的 bin 目录 (根据自己的目录输入)，如果没有更改默认下载路径，则一般为</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\MySQL\MySQL Server 8.0\bin</span><br></pre></td></tr></table></figure><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/e1c8475465d768bc72da4b2b085ae4a1.png" alt=""></p><ol start="6"><li>点击 [确认] ，回到终端尝试使用 MySQL 指令</li></ol><p>检查是否成功，输入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mysql <span class="operator">-</span>V</span><br></pre></td></tr></table></figure><p>返回版本信息则代表成功</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\MySQL\MySQL Server <span class="number">8.0</span>\bin\mysql.exe  Ver <span class="number">8.0</span><span class="number">.41</span> <span class="keyword">for</span> Win64 <span class="keyword">on</span> x86_64 (MySQL Community Server <span class="operator">-</span> GPL)</span><br></pre></td></tr></table></figure><h2 id="4-查看服务">4 查看服务</h2><p>需要启动服务，才能登陆 MySQL 并连接数据库。在之前配置时，已经默认服务启动。</p><p>可以检查一下：右键 [此电脑] 点击 [管理] ，双击 [服务和应用程序] ，双击 [服务] ，找到 MySQL 的服务 （默认情况下为 <code>MySQL80</code>）</p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/c94326af2e1953a05b2a0a087f366e8c_720.png" alt=""></p><p>也可以使用终端实现。右键 [终端]/[命令行工具] 使用 <strong>以管理员身份运行</strong> ，而后使用如下命令</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 启动服务 MySQL80 为 MySQL 的服务名</span><br><span class="line"><span class="operator">&gt;</span> net <span class="keyword">start</span> MySQL80</span><br><span class="line"></span><br><span class="line"># 停止服务 MySQL80 为 MySQL 的服务名</span><br><span class="line"><span class="operator">&gt;</span> net stop MySQL80</span><br></pre></td></tr></table></figure><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/4639db1363ba088fad5f91904369a021_720.png" alt=""></p><h2 id="5-登陆-MySQL">5 登陆 MySQL</h2><p>打开 [终端] 输入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>h 主机名 <span class="operator">-</span>P 端口名 <span class="operator">-</span>u 用户名 <span class="operator">-</span>p密码</span><br></pre></td></tr></table></figure><p>一般而言 主机名为 <code>localhost</code> ，端口名为 <code>3306</code> ，用户名为 <code>root</code> ，密码和 <code>-p</code> 之间不能有空格。</p><p>推荐使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br></pre></td></tr></table></figure><p>进行登陆，之后输入密码即可登陆。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line">Enter password: <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br></pre></td></tr></table></figure><p>登陆成功后为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Welcome <span class="keyword">to</span> the MySQL monitor.  Commands <span class="keyword">end</span> <span class="keyword">with</span> ; <span class="keyword">or</span> \g.</span><br><span class="line">Your MySQL connection id <span class="keyword">is</span> <span class="number">8</span></span><br><span class="line">Server version: <span class="number">8.0</span><span class="number">.41</span> MySQL Community Server <span class="operator">-</span> GPL</span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">2000</span>, <span class="number">2025</span>, Oracle <span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span> its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle <span class="keyword">is</span> a registered trademark <span class="keyword">of</span> Oracle Corporation <span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span> its</span><br><span class="line">affiliates. Other names may be trademarks <span class="keyword">of</span> their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> help. Type <span class="string">&#x27;\c&#x27;</span> <span class="keyword">to</span> clear the <span class="keyword">current</span> input statement.</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-简单尝试">6 简单尝试</h2><ol><li>查看已有数据库:</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> databases;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> information_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> performance_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sys                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> test               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br></pre></td></tr></table></figure><ol start="2"><li>创建数据库:</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database 数据库名 <span class="keyword">DEFAULT</span> CHARSET utf8 <span class="keyword">COLLATE</span> utf8_general_ci;  </span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database 数据库名</span><br></pre></td></tr></table></figure><ol start="3"><li>删除数据库:</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> database 数据库名;</span><br></pre></td></tr></table></figure><ol start="4"><li>进入数据库:</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use 数据库名;</span><br></pre></td></tr></table></figure><ol start="5"><li>查看数据库下所有数据表:</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> tables;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> tables;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_test <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> tb1            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br></pre></td></tr></table></figure><ol start="6"><li>创建表:</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> 表名(</span><br><span class="line">  列名 类型,</span><br><span class="line">  列名 类型,</span><br><span class="line">  列名 类型</span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>e.g.</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> tb1(</span><br><span class="line">    id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">16</span>),</span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>不能为空/允许为空</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> tb1(</span><br><span class="line">    id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">16</span>) <span class="keyword">not null</span>, <span class="comment">-- 不能为空</span></span><br><span class="line">    age <span class="type">int</span> <span class="keyword">null</span>         <span class="comment">-- 可以为空</span></span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>默认值</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> tb1(</span><br><span class="line">    id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">16</span>) <span class="keyword">not null</span>,</span><br><span class="line">    age <span class="type">int</span> <span class="keyword">default</span> <span class="number">3</span>        <span class="comment">-- 设置默认为3</span></span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>主键</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> tb1(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary key</span>,       <span class="comment">-- 不能为空，不能重复</span></span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">16</span>),</span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>一般设置，主键+自增 <code>标准</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> tb1(</span><br><span class="line">    id <span class="type">int</span> auto_increment <span class="keyword">primary key</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">16</span>),</span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ol start="7"><li>删除表</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名;</span><br></pre></td></tr></table></figure><ol start="8"><li>展示表信息</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> 表名;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> tb1;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> id    <span class="operator">|</span> <span class="type">int</span>         <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> auto_increment <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name  <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">16</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> age   <span class="operator">|</span> <span class="type">int</span>         <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本文详细介绍如何 下载、安装、配置、登陆、使用 MySQL</summary>
    
    
    
    <category term="MySQL" scheme="https://blog.iskage.online/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://blog.iskage.online/tags/MySQL/"/>
    
    <category term="SQL" scheme="https://blog.iskage.online/tags/SQL/"/>
    
    <category term="数据库" scheme="https://blog.iskage.online/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Pytorch 搭建神经网络 目录</title>
    <link href="https://blog.iskage.online/posts/8a1b9ca7.html"/>
    <id>https://blog.iskage.online/posts/8a1b9ca7.html</id>
    <published>2025-02-05T07:30:00.000Z</published>
    <updated>2025-02-05T03:36:26.053Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p><strong>文章为博主自学 Pytorch 整理的笔记。点击链接即可前往对应文章查看。更多信息，可前往本人的<a href="https://github.com/isKage/iskage.github.io">Github库</a>中查询。</strong></p></div><div class="note danger flat"><p><strong>转载请注明出处，要求见文末</strong></p></div><p>Pytorch 官方文档 中文 <a href="https://www.pytorchtutorial.com/docs/">https://www.pytorchtutorial.com/docs/</a></p><p>Pytorch 官方文档 <a href="https://pytorch.org/docs/stable/index.html">https://pytorch.org/docs/stable/index.html</a></p><div class="note no-icon flat"><p><strong>笔记目录</strong></p><p><a href="./3f7272cd.html">1 下载 Pytorch 和数据处理</a></p><p><a href="./ae1c954d.html">2 网络搭建</a></p><p><a href="./119f3166.html">3 损失函数 反向传播 优化器</a></p><p><a href="./bd02f045.html">4 网络调用和保存</a></p><p><a href="./2d229fe6.html">5 完整模型训练</a></p></div>]]></content>
    
    
    <summary type="html">利用 Pytorch 搭建神经网络，已更新完全</summary>
    
    
    
    <category term="Pytorch" scheme="https://blog.iskage.online/categories/Pytorch/"/>
    
    
    <category term="Pytorch" scheme="https://blog.iskage.online/tags/Pytorch/"/>
    
    <category term="神经网络" scheme="https://blog.iskage.online/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
    <category term="深度学习" scheme="https://blog.iskage.online/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="AI" scheme="https://blog.iskage.online/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>Pytorch 搭建神经网络（5）完整模型训练</title>
    <link href="https://blog.iskage.online/posts/2d229fe6.html"/>
    <id>https://blog.iskage.online/posts/2d229fe6.html</id>
    <published>2025-02-05T07:27:10.000Z</published>
    <updated>2025-02-05T03:32:21.233Z</updated>
    
    <content type="html"><![CDATA[<h1>Pytorch (CIFAR10)</h1><p>官方文档 中文 <a href="https://www.pytorchtutorial.com/docs/">https://www.pytorchtutorial.com/docs/</a></p><p>官方文档 <a href="https://pytorch.org/docs/stable/index.html">https://pytorch.org/docs/stable/index.html</a></p><h2 id="1-Structure">1. Structure</h2><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240806%E4%B8%8B%E5%8D%8882617716.png" alt=""></p><h2 id="2-Code">2 Code</h2><h3 id="train-model-py">train_model.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 搭建神经网络(output_features=10)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Classification10Class</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Classification10Class, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="variable language_">self</span>.module = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channels=<span class="number">3</span>, out_channels=<span class="number">32</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>, padding=<span class="number">2</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>),</span><br><span class="line">            nn.Conv2d(in_channels=<span class="number">32</span>, out_channels=<span class="number">32</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>, padding=<span class="number">2</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>),</span><br><span class="line">            nn.Conv2d(in_channels=<span class="number">32</span>, out_channels=<span class="number">64</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>, padding=<span class="number">2</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>),</span><br><span class="line">            nn.Flatten(),</span><br><span class="line">            nn.Linear(in_features=<span class="number">64</span> * <span class="number">4</span> * <span class="number">4</span>, out_features=<span class="number">64</span>),</span><br><span class="line">            nn.Linear(in_features=<span class="number">64</span>, out_features=<span class="number">10</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = <span class="variable language_">self</span>.module(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证网络正确性</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    classification = Classification10Class()</span><br><span class="line">    <span class="comment"># 按照batch_size=64，channel=3，size=32*32输入，即64张图片，RGB颜色通道，32*32的大小输入</span></span><br><span class="line">    inputs = torch.ones((<span class="number">64</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">32</span>))</span><br><span class="line">    ouputs = classification(inputs)</span><br><span class="line">    <span class="built_in">print</span>(ouputs.shape)</span><br></pre></td></tr></table></figure><h3 id="train-py"><a href="http://train.py">train.py</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot; CIFAR Dataset &quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> torchvision.datasets</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> train_model <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 准备数据集</span></span><br><span class="line">train_data = torchvision.datasets.CIFAR10(</span><br><span class="line">    root=<span class="string">&quot;./dataset&quot;</span>,</span><br><span class="line">    train=<span class="literal">True</span>,</span><br><span class="line">    transform=torchvision.transforms.ToTensor(),</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">test_data = torchvision.datasets.CIFAR10(</span><br><span class="line">    root=<span class="string">&quot;./dataset&quot;</span>,</span><br><span class="line">    train=<span class="literal">False</span>,</span><br><span class="line">    transform=torchvision.transforms.ToTensor(),</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 获取数据集长度</span></span><br><span class="line">train_data_size = <span class="built_in">len</span>(train_data)</span><br><span class="line">test_data_size = <span class="built_in">len</span>(test_data)</span><br><span class="line"><span class="comment"># print(&quot;训练数据集长度为 &#123;&#125;&quot;.format(train_data_size))</span></span><br><span class="line"><span class="comment"># print(&quot;测试数据集长度为 &#123;&#125;&quot;.format(test_data_size))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 利用DataLoader加载数据集</span></span><br><span class="line">train_dataloader = DataLoader(</span><br><span class="line">    dataset=train_data,</span><br><span class="line">    batch_size=<span class="number">64</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">test_dataloader = DataLoader(</span><br><span class="line">    dataset=test_data,</span><br><span class="line">    batch_size=<span class="number">64</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 搭建神经网络 (from train_model.py import *)</span></span><br><span class="line">classification = Classification10Class()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 损失函数</span></span><br><span class="line">loss_fn = nn.CrossEntropyLoss()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 优化器</span></span><br><span class="line">learning_rate = <span class="number">0.01</span></span><br><span class="line">optimizer = torch.optim.SGD(</span><br><span class="line">    params=classification.parameters(),</span><br><span class="line">    lr=learning_rate,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7. 设置训练网络的参数</span></span><br><span class="line">total_train_step = <span class="number">0</span>  <span class="comment"># 训练次数</span></span><br><span class="line">total_test_step = <span class="number">0</span>  <span class="comment"># 测试次数</span></span><br><span class="line">epochs = <span class="number">10</span>  <span class="comment"># 训练迭代次数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 8. 开始训练</span></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(epochs):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;----------第 &#123;&#125; 轮训练开始----------&quot;</span>.<span class="built_in">format</span>(epoch + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 训练步骤</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> train_dataloader:</span><br><span class="line">        <span class="comment"># 输入输出</span></span><br><span class="line">        images, targets = data</span><br><span class="line">        outputs = classification(images)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 损失函数</span></span><br><span class="line">        loss = loss_fn(outputs, targets)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 清零梯度</span></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 反向传播</span></span><br><span class="line">        loss.backward()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 更新参数</span></span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">        total_train_step += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> total_train_step % <span class="number">100</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;训练次数: &#123;&#125;, loss: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_train_step, loss.item()))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 测试步骤(不更新参数)</span></span><br><span class="line">    total_test_loss = <span class="number">0</span>  <span class="comment"># 测试集损失累积</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> test_dataloader:</span><br><span class="line">            images, targets = data</span><br><span class="line">            outputs = classification(images)</span><br><span class="line">            loss = loss_fn(outputs, targets)</span><br><span class="line">            total_test_loss += loss</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;测试集loss: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_test_loss))</span><br></pre></td></tr></table></figure><h3 id="output">output</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">----------第 1 轮训练开始----------</span><br><span class="line">训练次数: 100, loss: 2.2914345264434814</span><br><span class="line">训练次数: 200, loss: 2.2848589420318604</span><br><span class="line">训练次数: 300, loss: 2.2572102546691895</span><br><span class="line">训练次数: 400, loss: 2.1692259311676025</span><br><span class="line">训练次数: 500, loss: 2.0409679412841797</span><br><span class="line">训练次数: 600, loss: 2.0187602043151855</span><br><span class="line">训练次数: 700, loss: 2.009617567062378</span><br><span class="line">测试集loss: 313.149169921875</span><br><span class="line">----------第 2 轮训练开始----------</span><br><span class="line">训练次数: 800, loss: 1.878823161125183</span><br><span class="line">训练次数: 900, loss: 1.8439174890518188</span><br><span class="line">训练次数: 1000, loss: 1.9330165386199951</span><br><span class="line">训练次数: 1100, loss: 1.9703041315078735</span><br><span class="line">训练次数: 1200, loss: 1.7066203355789185</span><br><span class="line">训练次数: 1300, loss: 1.668871521949768</span><br><span class="line">训练次数: 1400, loss: 1.7355754375457764</span><br><span class="line">训练次数: 1500, loss: 1.7841742038726807</span><br><span class="line">测试集loss: 309.877685546875</span><br><span class="line">----------第 3 轮训练开始----------</span><br><span class="line">训练次数: 1600, loss: 1.7344536781311035</span><br><span class="line">训练次数: 1700, loss: 1.621435284614563</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="3-Visualization-Save">3 Visualization &amp; Save</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot; CIFAR Dataset &quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> torchvision.datasets</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> train_model <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 准备数据集</span></span><br><span class="line">train_data = torchvision.datasets.CIFAR10(</span><br><span class="line">    root=<span class="string">&quot;./dataset&quot;</span>,</span><br><span class="line">    train=<span class="literal">True</span>,</span><br><span class="line">    transform=torchvision.transforms.ToTensor(),</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">test_data = torchvision.datasets.CIFAR10(</span><br><span class="line">    root=<span class="string">&quot;./dataset&quot;</span>,</span><br><span class="line">    train=<span class="literal">False</span>,</span><br><span class="line">    transform=torchvision.transforms.ToTensor(),</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 获取数据集长度</span></span><br><span class="line">train_data_size = <span class="built_in">len</span>(train_data)</span><br><span class="line">test_data_size = <span class="built_in">len</span>(test_data)</span><br><span class="line"><span class="comment"># print(&quot;训练数据集长度为 &#123;&#125;&quot;.format(train_data_size))</span></span><br><span class="line"><span class="comment"># print(&quot;测试数据集长度为 &#123;&#125;&quot;.format(test_data_size))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 利用DataLoader加载数据集</span></span><br><span class="line">train_dataloader = DataLoader(</span><br><span class="line">    dataset=train_data,</span><br><span class="line">    batch_size=<span class="number">64</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">test_dataloader = DataLoader(</span><br><span class="line">    dataset=test_data,</span><br><span class="line">    batch_size=<span class="number">64</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 搭建神经网络 (from train_model.py import *)</span></span><br><span class="line">classification = Classification10Class()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 损失函数</span></span><br><span class="line">loss_fn = nn.CrossEntropyLoss()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 优化器</span></span><br><span class="line">learning_rate = <span class="number">0.01</span></span><br><span class="line">optimizer = torch.optim.SGD(</span><br><span class="line">    params=classification.parameters(),</span><br><span class="line">    lr=learning_rate,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7. 设置训练网络的参数</span></span><br><span class="line">total_train_step = <span class="number">0</span>  <span class="comment"># 训练次数</span></span><br><span class="line">total_test_step = <span class="number">0</span>  <span class="comment"># 测试次数</span></span><br><span class="line">epochs = <span class="number">10</span>  <span class="comment"># 训练迭代次数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加tensorboard可视化</span></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;./logs&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8. 开始训练</span></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(epochs):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;------------- 第 &#123;&#125; 轮训练开始 -------------&quot;</span>.<span class="built_in">format</span>(epoch + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 训练步骤</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> train_dataloader:</span><br><span class="line">        <span class="comment"># 输入输出</span></span><br><span class="line">        images, targets = data</span><br><span class="line">        outputs = classification(images)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 损失函数</span></span><br><span class="line">        loss = loss_fn(outputs, targets)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 清零梯度</span></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 反向传播</span></span><br><span class="line">        loss.backward()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 更新参数</span></span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">        total_train_step += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> total_train_step % <span class="number">100</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;训练次数: &#123;&#125;, loss: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_train_step, loss.item()))</span><br><span class="line">            writer.add_scalar(</span><br><span class="line">                tag=<span class="string">&quot;train_loss (every 100): &quot;</span>,</span><br><span class="line">                scalar_value=loss.item(),</span><br><span class="line">                global_step=total_train_step,</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 测试步骤(不更新参数)</span></span><br><span class="line">    total_test_loss = <span class="number">0</span>  <span class="comment"># 测试集损失累积</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> test_dataloader:</span><br><span class="line">            images, targets = data</span><br><span class="line">            outputs = classification(images)</span><br><span class="line">            loss = loss_fn(outputs, targets)</span><br><span class="line">            total_test_loss += loss</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;##### 测试集loss: &#123;&#125; #####&quot;</span>.<span class="built_in">format</span>(total_test_loss))</span><br><span class="line">    writer.add_scalar(</span><br><span class="line">        tag=<span class="string">&quot;test_loss (every epoch): &quot;</span>,</span><br><span class="line">        scalar_value=total_test_loss,</span><br><span class="line">        global_step=epoch,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存每次训练的模型</span></span><br><span class="line">    torch.save(classification, <span class="string">&quot;./models_cifar/classification_&#123;&#125;.pth&quot;</span>.<span class="built_in">format</span>(epoch))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;##### 模型成功保存 #####&quot;</span>)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240808%E4%B8%8A%E5%8D%88103240716.png" alt=""></p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240808%E4%B8%8A%E5%8D%88103319943.png" style="zoom:80%;"/><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240808%E4%B8%8A%E5%8D%88103407633.png" style="zoom:80%;" /><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240808%E4%B8%8A%E5%8D%88103503420.png" style="zoom:80%;" /></p><h2 id="4-Full-Code">4 Full Code</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot; CIFAR Classification &quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> torchvision.datasets</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> train_model <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 准备数据集</span></span><br><span class="line">train_data = torchvision.datasets.CIFAR10(</span><br><span class="line">    root=<span class="string">&quot;./dataset&quot;</span>,</span><br><span class="line">    train=<span class="literal">True</span>,</span><br><span class="line">    transform=torchvision.transforms.ToTensor(),</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">test_data = torchvision.datasets.CIFAR10(</span><br><span class="line">    root=<span class="string">&quot;./dataset&quot;</span>,</span><br><span class="line">    train=<span class="literal">False</span>,</span><br><span class="line">    transform=torchvision.transforms.ToTensor(),</span><br><span class="line">    download=<span class="literal">True</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 获取数据集长度</span></span><br><span class="line">train_data_size = <span class="built_in">len</span>(train_data)</span><br><span class="line">test_data_size = <span class="built_in">len</span>(test_data)</span><br><span class="line"><span class="comment"># print(&quot;训练数据集长度为 &#123;&#125;&quot;.format(train_data_size))</span></span><br><span class="line"><span class="comment"># print(&quot;测试数据集长度为 &#123;&#125;&quot;.format(test_data_size))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 利用DataLoader加载数据集</span></span><br><span class="line">train_dataloader = DataLoader(</span><br><span class="line">    dataset=train_data,</span><br><span class="line">    batch_size=<span class="number">64</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">test_dataloader = DataLoader(</span><br><span class="line">    dataset=test_data,</span><br><span class="line">    batch_size=<span class="number">64</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 搭建神经网络 (from train_model.py import *)</span></span><br><span class="line">classification = Classification10Class()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 损失函数</span></span><br><span class="line">loss_fn = nn.CrossEntropyLoss()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 优化器</span></span><br><span class="line">learning_rate = <span class="number">0.01</span></span><br><span class="line">optimizer = torch.optim.SGD(</span><br><span class="line">    params=classification.parameters(),</span><br><span class="line">    lr=learning_rate,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7. 设置训练网络的参数</span></span><br><span class="line">total_train_step = <span class="number">0</span>  <span class="comment"># 训练次数</span></span><br><span class="line">total_test_step = <span class="number">0</span>  <span class="comment"># 测试次数 == epoch</span></span><br><span class="line">epochs = <span class="number">10</span>  <span class="comment"># 训练迭代次数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加tensorboard可视化</span></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;./logs&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8. 开始训练</span></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(epochs):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;------------- 第 &#123;&#125; 轮训练开始 -------------&quot;</span>.<span class="built_in">format</span>(epoch + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 训练步骤</span></span><br><span class="line">    classification.train()</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> train_dataloader:</span><br><span class="line">        <span class="comment"># 输入输出</span></span><br><span class="line">        images, targets = data</span><br><span class="line">        outputs = classification(images)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 损失函数</span></span><br><span class="line">        loss = loss_fn(outputs, targets)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 清零梯度</span></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 反向传播</span></span><br><span class="line">        loss.backward()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 更新参数</span></span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">        total_train_step += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> total_train_step % <span class="number">100</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;训练次数: &#123;&#125;, loss: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_train_step, loss.item()))</span><br><span class="line">            writer.add_scalar(</span><br><span class="line">                tag=<span class="string">&quot;train_loss (every 100 steps)&quot;</span>,</span><br><span class="line">                scalar_value=loss.item(),</span><br><span class="line">                global_step=total_train_step,</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 测试步骤(不更新参数)</span></span><br><span class="line">    classification.<span class="built_in">eval</span>()</span><br><span class="line">    total_test_loss = <span class="number">0</span>  <span class="comment"># 测试集损失累积</span></span><br><span class="line">    total_accuracy = <span class="number">0</span>  <span class="comment"># 分类问题正确率</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> test_dataloader:</span><br><span class="line">            images, targets = data</span><br><span class="line">            outputs = classification(images)</span><br><span class="line">            loss = loss_fn(outputs, targets)</span><br><span class="line">            total_test_loss += loss.item()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 正确率</span></span><br><span class="line">            accuracy = (outputs.argmax(axis=<span class="number">1</span>) == targets).<span class="built_in">sum</span>()</span><br><span class="line">            total_accuracy += accuracy</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 在测试集上的损失</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;##### 在测试集上的loss: &#123;&#125; #####&quot;</span>.<span class="built_in">format</span>(total_test_loss))</span><br><span class="line">    writer.add_scalar(</span><br><span class="line">        tag=<span class="string">&quot;test_loss (every epoch)&quot;</span>,</span><br><span class="line">        scalar_value=total_test_loss,</span><br><span class="line">        global_step=epoch,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 在测试集上的正确率</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;##### 在测试集上的正确率: &#123;&#125; #####&quot;</span>.<span class="built_in">format</span>(total_accuracy / test_data_size))</span><br><span class="line">    writer.add_scalar(</span><br><span class="line">        tag=<span class="string">&quot;test_accuracy (every epoch)&quot;</span>,</span><br><span class="line">        scalar_value=total_accuracy / test_data_size,</span><br><span class="line">        global_step=epoch,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存每次训练的模型</span></span><br><span class="line">    torch.save(classification, <span class="string">&quot;./models_cifar/classification_&#123;&#125;.pth&quot;</span>.<span class="built_in">format</span>(epoch))</span><br><span class="line">    <span class="comment"># torch.save(classification.state_dict(), &quot;./models_cifar/classification_&#123;&#125;.pth&quot;.format(epoch)) # 推荐</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;##### 模型成功保存 #####&quot;</span>)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure><h2 id="5-GPU">5 GPU</h2><h3 id="1-Google-Colab">1. Google Colab</h3><ul><li>Google Colab: <a href="https://colab.research.google.com/">https://colab.research.google.com/</a></li></ul><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240808%E4%B8%8A%E5%8D%88110119717.png" alt=""></p><ul><li>配置</li></ul><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240808%E4%B8%8A%E5%8D%88110154640.png" alt=""></p><ul><li>cpu 大约42sgpu 大约8s</li></ul><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240808%E4%B8%8A%E5%8D%88110318142.png" alt=""></p><h3 id="2-Method-1-cuda">2. Method 1: .cuda()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27; GPU &#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    model_name = model_name.cuda()  <span class="comment"># GPU</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    loss_fn = loss_fn.cuda()  <span class="comment"># GPU</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    images = images.cuda()</span><br><span class="line">    targets = targets.cuda()</span><br></pre></td></tr></table></figure><h3 id="3-Method-2-to-device">3. Method 2: .to(device)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">device = torch.device(<span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span>)</span><br><span class="line"></span><br><span class="line">model_name = model_name.to(device)</span><br><span class="line">loss_fn = loss_fn.to(device)</span><br><span class="line">images = images.to(device)</span><br><span class="line">targets = targets.to(device)</span><br></pre></td></tr></table></figure><h2 id="6-Validation-and-Test">6 Validation and Test</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision.transforms</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"></span><br><span class="line">image_path = <span class="string">&quot;./image/dog.png&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 加载图片并转化类型</span></span><br><span class="line">image = Image.<span class="built_in">open</span>(image_path)</span><br><span class="line">image = image.convert(<span class="string">&quot;RGB&quot;</span>)</span><br><span class="line">transform = torchvision.transforms.Compose([</span><br><span class="line">    torchvision.transforms.Resize((<span class="number">32</span>, <span class="number">32</span>)),</span><br><span class="line">    torchvision.transforms.ToTensor(),</span><br><span class="line">])</span><br><span class="line">image = transform(image)  <span class="comment"># torch.Size([3, 32, 32])</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 加载神经网络(因为是方式1, 所以要申明网络模型)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Classification10Class</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Classification10Class, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="variable language_">self</span>.module = nn.Sequential(</span><br><span class="line">            nn.Conv2d(in_channels=<span class="number">3</span>, out_channels=<span class="number">32</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>, padding=<span class="number">2</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>),</span><br><span class="line">            nn.Conv2d(in_channels=<span class="number">32</span>, out_channels=<span class="number">32</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>, padding=<span class="number">2</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>),</span><br><span class="line">            nn.Conv2d(in_channels=<span class="number">32</span>, out_channels=<span class="number">64</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>, padding=<span class="number">2</span>),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">2</span>),</span><br><span class="line">            nn.Flatten(),</span><br><span class="line">            nn.Linear(in_features=<span class="number">64</span> * <span class="number">4</span> * <span class="number">4</span>, out_features=<span class="number">64</span>),</span><br><span class="line">            nn.Linear(in_features=<span class="number">64</span>, out_features=<span class="number">10</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = <span class="variable language_">self</span>.module(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. load参数</span></span><br><span class="line">model = torch.load(<span class="string">&quot;./models_cifar/classification_gpu_29.pth&quot;</span>, map_location=torch.device(<span class="string">&#x27;cpu&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 测试</span></span><br><span class="line">image = torch.reshape(image, (<span class="number">1</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">32</span>))</span><br><span class="line"></span><br><span class="line">model.<span class="built_in">eval</span>()</span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    outputs = model(image)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(outputs)</span><br><span class="line"><span class="built_in">print</span>(outputs.argmax(axis=<span class="number">1</span>))</span><br></pre></td></tr></table></figure><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240808%E4%B8%8A%E5%8D%88114418117.png" alt=""></p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240808%E4%B8%8A%E5%8D%88114552561.png" alt=""></p>]]></content>
    
    
    <summary type="html">利用 Pytorch 搭建神经网络：完整的搭建，训练过程，以 CIFAR10 数据集为例</summary>
    
    
    
    <category term="Pytorch" scheme="https://blog.iskage.online/categories/Pytorch/"/>
    
    
    <category term="Pytorch" scheme="https://blog.iskage.online/tags/Pytorch/"/>
    
    <category term="神经网络" scheme="https://blog.iskage.online/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
    <category term="深度学习" scheme="https://blog.iskage.online/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="AI" scheme="https://blog.iskage.online/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>Pytorch 搭建神经网络（4）网络调用和保存</title>
    <link href="https://blog.iskage.online/posts/bd02f045.html"/>
    <id>https://blog.iskage.online/posts/bd02f045.html</id>
    <published>2025-02-05T07:27:06.000Z</published>
    <updated>2025-02-05T03:24:18.280Z</updated>
    
    <content type="html"><![CDATA[<h1>Pytorch</h1><p>官方文档 中文 <a href="https://www.pytorchtutorial.com/docs/">https://www.pytorchtutorial.com/docs/</a></p><p>官方文档 <a href="https://pytorch.org/docs/stable/index.html">https://pytorch.org/docs/stable/index.html</a></p><h2 id="1-torchvision-models">1 torchvision.models</h2><p>有关图像处理的模型</p><p>torchvision.models: <a href="https://pytorch.org/vision/0.9/models.html">https://pytorch.org/vision/0.9/models.html</a></p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240806%E4%B8%8B%E5%8D%8860250011.png" alt=""></p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240806%E4%B8%8B%E5%8D%8861010016.png" alt=""></p><h2 id="2-Example-Classification-VGG">2 Example: Classification VGG</h2><h3 id="1-Download-ImageNet">1. Download ImageNet</h3><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240806%E4%B8%8B%E5%8D%8861138161.png" alt=""></p><p>too large</p><h3 id="2-Download-the-model">2. Download the model</h3><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240806%E4%B8%8B%E5%8D%8862514836.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision.datasets</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vgg16_pretrained_false = torchvision.models.vgg16(pretrained=<span class="literal">False</span>)</span><br><span class="line">vgg16_pretrained_true = torchvision.models.vgg16(pretrained=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(vgg16_pretrained_true)</span><br></pre></td></tr></table></figure><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240806%E4%B8%8B%E5%8D%8862722432.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model: out_features=<span class="number">1000</span></span><br></pre></td></tr></table></figure><h3 id="3-Add-Layers">3. Add Layers</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot; 增加层 &quot;&quot;&quot;</span></span><br><span class="line">vgg16_pretrained_true.classifier.add_module(</span><br><span class="line">    name=<span class="string">&quot;add_linear&quot;</span>,  <span class="comment"># 增加新的层名</span></span><br><span class="line">    module=nn.Linear(</span><br><span class="line">        in_features=<span class="number">1000</span>,</span><br><span class="line">        out_features=<span class="number">10</span>,</span><br><span class="line">    ),  <span class="comment"># 增加新的层</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(vgg16_pretrained_true)  <span class="comment"># out_features=10</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240806%E4%B8%8B%E5%8D%8863539832.png" alt=""></p><h3 id="4-Modify-Layers">4. Modify Layers</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot; 修改层 &quot;&quot;&quot;</span></span><br><span class="line">vgg16_pretrained_false.classifier[<span class="number">6</span>] = nn.Linear(</span><br><span class="line">    in_features=<span class="number">1000</span>,</span><br><span class="line">    out_features=<span class="number">10</span>,</span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(vgg16_pretrained_false)  <span class="comment"># out_features=10</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240806%E4%B8%8B%E5%8D%8863840763.png" alt=""></p><h2 id="3-Save-Load-Models">3 Save &amp; Load Models</h2><h3 id="1-Save">1. Save</h3><h4 id="Method-1">Method 1</h4><ul><li>save()</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"></span><br><span class="line">vgg16 = torchvision.models.vgg16(pretrained=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">1. save method 1: save -&gt; structure + parameters</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">torch.save(vgg16, <span class="string">&quot;./models/vgg16_method1.pth&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="Method-2-Recommend">Method 2 (Recommend)</h4><ul><li>save(model.state_dict())</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"></span><br><span class="line">vgg16 = torchvision.models.vgg16(pretrained=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">2. save method 2: save as dict -&gt; parameters (better)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">torch.save(vgg16.state_dict(), <span class="string">&quot;./models/vgg16_method2.pth&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="2-Load">2. Load</h3><h4 id="Method-1-2">Method 1</h4><ul><li>load()</li></ul><p>structure + parameters</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"></span><br><span class="line"><span class="comment"># load method 1:</span></span><br><span class="line">model1 = torch.load(<span class="string">&quot;./models/vgg16_method1.pth&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(model1)</span><br></pre></td></tr></table></figure><h4 id="Method-2-Recommend-2">Method 2 (Recommend)</h4><ul><li>load_state_dict()</li></ul><p>parameters -&gt; models</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"></span><br><span class="line"><span class="comment"># load method 2:</span></span><br><span class="line">vgg16 = torchvision.models.vgg16()</span><br><span class="line">model2_param_dict = torch.load(<span class="string">&quot;./models/vgg16_method2.pth&quot;</span>)  <span class="comment"># parameters&#x27; dict</span></span><br><span class="line">vgg16.load_state_dict(model2_param_dict)</span><br><span class="line"><span class="built_in">print</span>(vgg16)</span><br></pre></td></tr></table></figure><h3 id="3-Some-Errors">3. Some Errors</h3><ul><li>save the model with method 1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27; python_file_name: model_save.py &#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyNet</span>(nn.Module):</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">      <span class="built_in">super</span>(MyNet, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="variable language_">self</span>.conv1 = nn.Conv2d(<span class="number">3</span>, <span class="number">64</span>, kernel_size=<span class="number">3</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">      x = <span class="variable language_">self</span>.conv1(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">my_net = MyNet()</span><br><span class="line">torch.save(my_net, <span class="string">&quot;my_net_method1.pth&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>load the model in another python file</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">error</span></span><br><span class="line"><span class="string">model = torch.load(&quot;my_net_method1.pth&quot;)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model_save <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">model = torch.load(<span class="string">&quot;my_net_method1.pth&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">利用 Pytorch 搭建神经网络：调用其他网络，保存自己的网络</summary>
    
    
    
    <category term="Pytorch" scheme="https://blog.iskage.online/categories/Pytorch/"/>
    
    
    <category term="Pytorch" scheme="https://blog.iskage.online/tags/Pytorch/"/>
    
    <category term="神经网络" scheme="https://blog.iskage.online/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
    <category term="深度学习" scheme="https://blog.iskage.online/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="AI" scheme="https://blog.iskage.online/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>Pytorch 搭建神经网络（3）损失函数 反向传播 优化器</title>
    <link href="https://blog.iskage.online/posts/119f3166.html"/>
    <id>https://blog.iskage.online/posts/119f3166.html</id>
    <published>2025-02-05T07:27:03.000Z</published>
    <updated>2025-02-05T03:21:53.096Z</updated>
    
    <content type="html"><![CDATA[<h1>Loss Backward Optimizer 损失函数 反向传播 优化器</h1><p>官方文档 中文 <a href="https://www.pytorchtutorial.com/docs/">https://www.pytorchtutorial.com/docs/</a></p><p>官方文档 <a href="https://pytorch.org/docs/stable/index.html">https://pytorch.org/docs/stable/index.html</a></p><h2 id="1-Loss-Function">1 Loss Function</h2><h3 id="1-Loss-Functions">1. Loss Functions</h3><p><a href="https://pytorch.org/docs/1.8.1/nn.html#loss-functions">https://pytorch.org/docs/1.8.1/nn.html#loss-functions</a></p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240805%E4%B8%8B%E5%8D%8834542085.png" alt=""></p><h3 id="2-Some-Loss-Functions">2. Some Loss Functions</h3><h4 id="L1Loss">L1Loss</h4><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240805%E4%B8%8B%E5%8D%8835511919.png" alt=""></p><ul><li>examples</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> L1Loss</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = torch.tensor([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], dtype=torch.<span class="built_in">float</span>)</span><br><span class="line">target = torch.tensor([<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>], dtype=torch.<span class="built_in">float</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = torch.reshape(<span class="built_in">input</span>, (<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>))</span><br><span class="line">target = torch.reshape(target, (<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">loss_sum = L1Loss(reduction=<span class="string">&#x27;sum&#x27;</span>)  <span class="comment"># tensor(2.)</span></span><br><span class="line">loss_mean = L1Loss(reduction=<span class="string">&#x27;mean&#x27;</span>)  <span class="comment"># tensor(0.6667)</span></span><br><span class="line">res_sum = loss_sum(<span class="built_in">input</span>, target)</span><br><span class="line">res_mean = loss_mean(<span class="built_in">input</span>, target)</span><br><span class="line"><span class="built_in">print</span>(res_sum)</span><br><span class="line"><span class="built_in">print</span>(res_mean)</span><br></pre></td></tr></table></figure><ul><li>input &amp; target</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">input -&gt; (N, *)</span><br><span class="line">target -&gt; (N, *)</span><br></pre></td></tr></table></figure><h4 id="MSELoss">MSELoss</h4><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240805%E4%B8%8B%E5%8D%8835620468.png" alt=""></p><ul><li>example</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> MSELoss</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = torch.tensor([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], dtype=torch.<span class="built_in">float</span>)</span><br><span class="line">target = torch.tensor([<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>], dtype=torch.<span class="built_in">float</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = torch.reshape(<span class="built_in">input</span>, (<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>))</span><br><span class="line">target = torch.reshape(target, (<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">loss = MSELoss()</span><br><span class="line">res = loss(<span class="built_in">input</span>, target)  <span class="comment"># tensor(1.3333)</span></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><ul><li>input &amp; target</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">input -&gt; (N, *)</span><br><span class="line">target -&gt; (N, *)</span><br></pre></td></tr></table></figure><h4 id="CrossEntropyLoss">CrossEntropyLoss</h4><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240805%E4%B8%8B%E5%8D%8840106382.png" alt=""></p><ul><li>example</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> CrossEntropyLoss</span><br><span class="line"></span><br><span class="line">input_predict = torch.tensor([<span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">0.3</span>], dtype=torch.<span class="built_in">float</span>)  <span class="comment"># 模型返回了对3个种类的概率预测</span></span><br><span class="line">target = torch.tensor([<span class="number">1</span>])   <span class="comment"># 实际属于第1+1种，返回1</span></span><br><span class="line"></span><br><span class="line">input_predict = torch.reshape(input_predict, (<span class="number">1</span>, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">loss = CrossEntropyLoss()</span><br><span class="line">res = loss(input_predict, target)  <span class="comment"># tensor(1.1019)</span></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><ul><li>input &amp; target</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">input  -&gt; (N, C)    最后得到的各个种类的概率</span><br><span class="line">target -&gt; (N)      实际属于哪一种</span><br><span class="line"></span><br><span class="line">output -&gt; 返回标量: If reduction is &#x27;none&#x27;, then the same size as the target: (N) </span><br><span class="line"></span><br><span class="line"># C = number of classes</span><br></pre></td></tr></table></figure><h3 id="3-Loss-of-CIFAR10">3. Loss of CIFAR10</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d, MaxPool2d, Flatten, Linear, Sequential</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cifar</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Cifar, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="variable language_">self</span>.model1 = Sequential(</span><br><span class="line">            Conv2d(in_channels=<span class="number">3</span>, out_channels=<span class="number">32</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(kernel_size=<span class="number">2</span>),</span><br><span class="line">            Conv2d(in_channels=<span class="number">32</span>, out_channels=<span class="number">32</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(kernel_size=<span class="number">2</span>),</span><br><span class="line">            Conv2d(in_channels=<span class="number">32</span>, out_channels=<span class="number">64</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(kernel_size=<span class="number">2</span>),</span><br><span class="line">            Flatten(),</span><br><span class="line">            Linear(in_features=<span class="number">64</span> * <span class="number">4</span> * <span class="number">4</span>, out_features=<span class="number">64</span>),</span><br><span class="line">            Linear(in_features=<span class="number">64</span>, out_features=<span class="number">10</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = <span class="variable language_">self</span>.model1(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;测试&#x27;&#x27;&#x27;</span></span><br><span class="line">dataset = torchvision.datasets.CIFAR10(</span><br><span class="line">    root=<span class="string">&quot;./dataset&quot;</span>,</span><br><span class="line">    train=<span class="literal">False</span>,</span><br><span class="line">    download=<span class="literal">False</span>,</span><br><span class="line">    transform=torchvision.transforms.ToTensor()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">dataloader = DataLoader(dataset, batch_size=<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line">my_net = Cifar()</span><br><span class="line">loss = nn.CrossEntropyLoss()</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    outputs = my_net(imgs)</span><br><span class="line">    <span class="comment"># print(outputs)  # [p0, p1, ..., p9]  每张图片的类的预测的概率</span></span><br><span class="line">    <span class="comment"># print(targets)  # [t0, t1, ..., t63] 真实每张图片对应的类标号</span></span><br><span class="line"></span><br><span class="line">    res_loss = loss(outputs, targets)</span><br><span class="line">    <span class="built_in">print</span>(res_loss)   <span class="comment"># tensor(2.2994, grad_fn=&lt;NllLossBackward0&gt;) 误差</span></span><br></pre></td></tr></table></figure><h2 id="2-Backward">2 Backward</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">my_net = Cifar()</span><br><span class="line">loss = nn.CrossEntropyLoss()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27; network &#x27;&#x27;&#x27;</span></span><br><span class="line">    imgs, targets = data</span><br><span class="line">    outputs = my_net(imgs)</span><br><span class="line">    <span class="comment"># print(outputs)  # [p0, p1, ..., p9]  每张图片的类的预测的概率</span></span><br><span class="line">    <span class="comment"># print(targets)  # [t0, t1, ..., t63] 真实每张图片对应的类标号</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27; loss function &#x27;&#x27;&#x27;</span></span><br><span class="line">    res_loss = loss(outputs, targets)</span><br><span class="line">    <span class="comment"># print(res_loss)   # tensor(2.2994, grad_fn=&lt;NllLossBackward0&gt;) 误差</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27; backward &#x27;&#x27;&#x27;</span></span><br><span class="line">    res_loss.backward()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;ok&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240805%E4%B8%8B%E5%8D%8843712009.png" alt=""></p><h2 id="3-Optimizer">3 Optimizer</h2><p>Pytorch Docs: <a href="https://pytorch.org/docs/1.8.1/optim.html">https://pytorch.org/docs/1.8.1/optim.html</a></p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240805%E4%B8%8B%E5%8D%8844003825.png" alt=""></p><h3 id="1-Basical-Usage">1. Basical Usage</h3><ol><li>Constructing it</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27; 参数parameters和学习率lr(learning rate)是必须传入的，其他由特定算法决定 &#x27;&#x27;&#x27;</span></span><br><span class="line">optimizer = optim.SGD(model.parameters(), lr=<span class="number">0.01</span>, momentum=<span class="number">0.9</span>)</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">optimizer = optim.Adam([var1, var2], lr=<span class="number">0.0001</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>Taking an optimization step</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">input</span>, target <span class="keyword">in</span> dataset:</span><br><span class="line">  <span class="comment"># 清零</span></span><br><span class="line">    optimizer.zero_grad()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 模型训练</span></span><br><span class="line">    output = model(<span class="built_in">input</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 损失函数</span></span><br><span class="line">    loss = loss_fn(output, target)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 反向传播</span></span><br><span class="line">    loss.backward()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 优化器更新参数</span></span><br><span class="line">    optimizer.step()</span><br></pre></td></tr></table></figure><h2 id="4-完整网络代码-Full-Example-for-NN">4 完整网络代码 Full  Example for NN</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch.optim</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d, MaxPool2d, Flatten, Linear, Sequential</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27; 加载数据 &#x27;&#x27;&#x27;</span></span><br><span class="line">dataset = torchvision.datasets.CIFAR10(</span><br><span class="line">    root=<span class="string">&quot;./dataset&quot;</span>,</span><br><span class="line">    train=<span class="literal">False</span>,</span><br><span class="line">    download=<span class="literal">False</span>,</span><br><span class="line">    transform=torchvision.transforms.ToTensor()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">dataloader = DataLoader(dataset, batch_size=<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cifar</span>(nn.Module):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27; 创建网络 &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Cifar, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="variable language_">self</span>.model1 = Sequential(</span><br><span class="line">            Conv2d(in_channels=<span class="number">3</span>, out_channels=<span class="number">32</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(kernel_size=<span class="number">2</span>),</span><br><span class="line">            Conv2d(in_channels=<span class="number">32</span>, out_channels=<span class="number">32</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(kernel_size=<span class="number">2</span>),</span><br><span class="line">            Conv2d(in_channels=<span class="number">32</span>, out_channels=<span class="number">64</span>, kernel_size=<span class="number">5</span>, stride=<span class="number">1</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(kernel_size=<span class="number">2</span>),</span><br><span class="line">            Flatten(),</span><br><span class="line">            Linear(in_features=<span class="number">64</span> * <span class="number">4</span> * <span class="number">4</span>, out_features=<span class="number">64</span>),</span><br><span class="line">            Linear(in_features=<span class="number">64</span>, out_features=<span class="number">10</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = <span class="variable language_">self</span>.model1(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27; 实例化网络 选择损失函数 优化器 &#x27;&#x27;&#x27;</span></span><br><span class="line">my_net = Cifar()</span><br><span class="line">loss = nn.CrossEntropyLoss()</span><br><span class="line">optim = torch.optim.SGD(my_net.parameters(), lr=<span class="number">0.01</span>)  <span class="comment"># 随机梯度下降</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27; 开始训练 &#x27;&#x27;&#x27;</span></span><br><span class="line">epochs = <span class="number">20</span></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(epochs):</span><br><span class="line">    <span class="comment"># 每次训练起始损失</span></span><br><span class="line">    running_loss = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27; network &#x27;&#x27;&#x27;</span></span><br><span class="line">        imgs, targets = data</span><br><span class="line">        outputs = my_net(imgs)</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27; loss function &#x27;&#x27;&#x27;</span></span><br><span class="line">        res_loss = loss(outputs, targets)</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27; zero_grad &#x27;&#x27;&#x27;</span></span><br><span class="line">        optim.zero_grad()</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27; backward &#x27;&#x27;&#x27;</span></span><br><span class="line">        res_loss.backward()</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27; optim_step updated &#x27;&#x27;&#x27;</span></span><br><span class="line">        optim.step()</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27; each epoch loss sum &#x27;&#x27;&#x27;</span></span><br><span class="line">        running_loss += res_loss</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;every epoch, the loss is: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(running_loss))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>every epoch, the loss <span class="keyword">is</span>: <span class="number">360.25927734375</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>every epoch, the loss <span class="keyword">is</span>: <span class="number">354.6569519042969</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>every epoch, the loss <span class="keyword">is</span>: <span class="number">336.74420166015625</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>every epoch, the loss <span class="keyword">is</span>: <span class="number">319.4207458496094</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>every epoch, the loss <span class="keyword">is</span>: <span class="number">310.6980285644531</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>every epoch, the loss <span class="keyword">is</span>: <span class="number">302.37701416015625</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>every epoch, the loss <span class="keyword">is</span>: <span class="number">292.7424011230469</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>every epoch, the loss <span class="keyword">is</span>: <span class="number">284.93902587890625</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">利用 Pytorch 搭建神经网络：完整的网络</summary>
    
    
    
    <category term="Pytorch" scheme="https://blog.iskage.online/categories/Pytorch/"/>
    
    
    <category term="Pytorch" scheme="https://blog.iskage.online/tags/Pytorch/"/>
    
    <category term="神经网络" scheme="https://blog.iskage.online/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
    <category term="深度学习" scheme="https://blog.iskage.online/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="AI" scheme="https://blog.iskage.online/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>Pytorch 搭建神经网络（2）网络搭建</title>
    <link href="https://blog.iskage.online/posts/ae1c954d.html"/>
    <id>https://blog.iskage.online/posts/ae1c954d.html</id>
    <published>2025-02-05T07:27:01.000Z</published>
    <updated>2025-02-05T03:19:43.786Z</updated>
    
    <content type="html"><![CDATA[<h1>Pytorch 搭建网络</h1><p>官方文档 中文 <a href="https://www.pytorchtutorial.com/docs/">https://www.pytorchtutorial.com/docs/</a></p><p>官方文档 <a href="https://pytorch.org/docs/stable/index.html">https://pytorch.org/docs/stable/index.html</a></p><h2 id="1-神经网络">1 神经网络</h2><p>官方文档：<a href="https://pytorch.org/docs/1.8.1/nn.html">https://pytorch.org/docs/1.8.1/nn.html</a></p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240731%E4%B8%8A%E5%8D%8893656667.png" alt=""></p><h2 id="2-Containers框架">2 Containers框架</h2><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240731%E4%B8%8A%E5%8D%8893741302.png" alt=""></p><ul><li>官方示例</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 示例</span></span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Model</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Model, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="variable language_">self</span>.conv1 = nn.Conv2d(<span class="number">1</span>, <span class="number">20</span>, <span class="number">5</span>)</span><br><span class="line">        <span class="variable language_">self</span>.conv2 = nn.Conv2d(<span class="number">20</span>, <span class="number">20</span>, <span class="number">5</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 前向传播</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = F.relu(<span class="variable language_">self</span>.conv1(x))<span class="comment"># 卷积conv1、非线性relu</span></span><br><span class="line">        <span class="keyword">return</span> F.relu(<span class="variable language_">self</span>.conv2(x))<span class="comment"># 卷积conv2、非线性relu</span></span><br></pre></td></tr></table></figure><ul><li>简单尝试</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyModel</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(MyModel, <span class="variable language_">self</span>).__init__()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, <span class="built_in">input</span></span>):</span><br><span class="line">        output = <span class="built_in">input</span> + <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">my_model = MyModel()</span><br><span class="line">x = torch.tensor(<span class="number">1.0</span>)</span><br><span class="line">output = my_model(x)</span><br><span class="line"><span class="built_in">print</span>(output)</span><br></pre></td></tr></table></figure><h2 id="3-stride-padding">3 stride &amp; padding</h2><p><strong>torch.nn.functional.conv2d</strong></p><h3 id="1-stride">1. stride</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入图像 5x5 每个数字表示颜色</span></span><br><span class="line"><span class="built_in">input</span> = torch.tensor([</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卷积核 3x3</span></span><br><span class="line">kernel = torch.tensor([</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 因为torch.nn.functional.conv2d默认输入为4维的，所以转化</span></span><br><span class="line"><span class="built_in">input</span> = torch.reshape(<span class="built_in">input</span>, (<span class="number">1</span>, <span class="number">1</span>, <span class="built_in">input</span>.shape[<span class="number">0</span>], <span class="built_in">input</span>.shape[<span class="number">1</span>]))</span><br><span class="line">kernel = torch.reshape(kernel, (<span class="number">1</span>, <span class="number">1</span>, kernel.shape[<span class="number">0</span>], kernel.shape[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">torch.nn.functional.conv2d(input, weight, bias=None, stride=1, padding=0, dilation=1, groups=1) → Tensor</span></span><br><span class="line"><span class="string">input: 就是输入数据集</span></span><br><span class="line"><span class="string">weight: 卷积核</span></span><br><span class="line"><span class="string">stride: 卷积核每次移动的步数</span></span><br><span class="line"><span class="string">padding: 对输入图像的填充</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">output_stride1 = F.conv2d(<span class="built_in">input</span>, kernel, stride=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(output_stride1)</span><br><span class="line"></span><br><span class="line">output_stride2 = F.conv2d(<span class="built_in">input</span>, kernel, stride=<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(output_stride2)</span><br></pre></td></tr></table></figure><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240731%E4%B8%8A%E5%8D%88101819072.png" alt=""></p><h3 id="2-padding">2. padding</h3><p>对输入图像的填充</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">output_padding1 = F.conv2d(<span class="built_in">input</span>, kernel, padding=<span class="number">1</span>, stride=<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(output_padding1)</span><br></pre></td></tr></table></figure><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240731%E4%B8%8A%E5%8D%88102514146.png" alt=""></p><h2 id="4-卷积层">4 卷积层</h2><h3 id="1-Convolution">1. Convolution</h3><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240731%E4%B8%8A%E5%8D%88102701065.png" alt=""></p><h3 id="2-调用和参数">2. 调用和参数</h3><ul><li>调用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">torch</span>.nn.Conv2d(in_channels, out_channels, kernel_size, stride=<span class="number">1</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, groups=<span class="number">1</span>, bias=<span class="literal">True</span>, padding_mode=<span class="string">&#x27;zeros&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># in_channels: 输入</span></span><br><span class="line">- in_channels (<span class="built_in">int</span>) – Number of channels <span class="keyword">in</span> the <span class="built_in">input</span> image</span><br><span class="line"></span><br><span class="line"><span class="comment"># out_channels: 输出</span></span><br><span class="line">- out_channels (<span class="built_in">int</span>) – Number of channels produced by the convolution</span><br><span class="line"></span><br><span class="line"><span class="comment"># kernel_size: 卷积核的大小</span></span><br><span class="line">- kernel_size (<span class="built_in">int</span> <span class="keyword">or</span> <span class="built_in">tuple</span>) – Size of the convolving kernel</span><br><span class="line"></span><br><span class="line"><span class="comment"># stride: 步数</span></span><br><span class="line">- stride (<span class="built_in">int</span> <span class="keyword">or</span> <span class="built_in">tuple</span>, optional) – Stride of the convolution. Default: <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># padding: 填充层数</span></span><br><span class="line">- padding (<span class="built_in">int</span> <span class="keyword">or</span> <span class="built_in">tuple</span>, optional) – Zero-padding added to both sides of the <span class="built_in">input</span>. Default: <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># padding_mode: 填充方式</span></span><br><span class="line">- padding_mode (string, optional) – <span class="string">&#x27;zeros&#x27;</span>, <span class="string">&#x27;reflect&#x27;</span>, <span class="string">&#x27;replicate&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;circular&#x27;</span>. Default: <span class="string">&#x27;zeros&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># dilation: 卷积核中元素的对应位置</span></span><br><span class="line">- dilation (<span class="built_in">int</span> <span class="keyword">or</span> <span class="built_in">tuple</span>, optional) – Spacing between kernel elements. Default: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">- groups (<span class="built_in">int</span>, optional) – Number of blocked connections <span class="keyword">from</span> <span class="built_in">input</span> channels to output channels. Default: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">- bias (<span class="built_in">bool</span>, optional) – If <span class="literal">True</span>, adds a learnable bias to the output. Default: <span class="literal">True</span></span><br></pre></td></tr></table></figure><ul><li>dilation</li></ul><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/QQ_1738725222605.png" alt=""></p><h3 id="3-简单原理">3. 简单原理</h3><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240731%E4%B8%8A%E5%8D%88103543577.png" alt=""></p><ul><li>in_channels &amp; out_channels</li></ul><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240731%E4%B8%8A%E5%8D%88104218535.png" alt=""></p><h3 id="4-示例代码">4. 示例代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"></span><br><span class="line">dataset = torchvision.datasets.CIFAR10(<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">False</span>, transform=torchvision.transforms.ToTensor(),</span><br><span class="line">                                       download=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">dataloader = DataLoader(dataset, batch_size=<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Net</span>(torch.nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Net, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="variable language_">self</span>.conv1 = Conv2d(in_channels=<span class="number">3</span>, out_channels=<span class="number">6</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = <span class="variable language_">self</span>.conv1(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">my_net = Net()</span><br><span class="line"><span class="built_in">print</span>(my_net)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 网络结构</span></span><br><span class="line">Net(</span><br><span class="line">  (conv1): Conv2d(<span class="number">3</span>, <span class="number">6</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在tensorboard展示</span></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;./logs_conv&quot;</span>)</span><br><span class="line">step = <span class="number">0</span></span><br><span class="line">my_net = Net()</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    output = my_net(imgs)</span><br><span class="line">    writer.add_images(<span class="string">&quot;input&quot;</span>, imgs, step)</span><br><span class="line">    <span class="comment"># writer.add_images(&quot;output&quot;, output, step)  # torch.Size([64, 6, 30, 30]) output的channel=6，报错</span></span><br><span class="line">    output = torch.reshape(output, (-<span class="number">1</span>, <span class="number">3</span>, <span class="number">30</span>, <span class="number">30</span>))</span><br><span class="line">    writer.add_images(<span class="string">&quot;output&quot;</span>, output, step)</span><br><span class="line">    step += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>如果希望卷积后，通道变多，但尺寸不变，则需要填充padding，公式</p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240731%E4%B8%8A%E5%8D%88110036714.png" alt=""></p><h2 id="5-池化层">5 池化层</h2><h3 id="1-Pooling">1. Pooling</h3><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240804%E4%B8%8B%E5%8D%8830453528.png" alt=""></p><h3 id="2-调用和参数-2">2. 调用和参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">torch.nn.MaxPool2d(kernel_size, stride=<span class="literal">None</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, return_indices=<span class="literal">False</span>, ceil_mode=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取最大值的窗口</span></span><br><span class="line">- kernel_size – the size of the window to take a <span class="built_in">max</span> over</span><br><span class="line"></span><br><span class="line"><span class="comment"># 横向纵向的步长，default = kernel_size</span></span><br><span class="line">- stride – the stride of the window. Default value <span class="keyword">is</span> kernel_size</span><br><span class="line"></span><br><span class="line"><span class="comment"># 补充图像边缘</span></span><br><span class="line">- padding – implicit zero padding to be added on both sides</span><br><span class="line"></span><br><span class="line"><span class="comment"># 空洞</span></span><br><span class="line">- dilation – a parameter that controls the stride of elements <span class="keyword">in</span> the window</span><br><span class="line"></span><br><span class="line">- return_indices – <span class="keyword">if</span> <span class="literal">True</span>, will <span class="keyword">return</span> the <span class="built_in">max</span> indices along <span class="keyword">with</span> the outputs. Useful <span class="keyword">for</span> torch.nn.MaxUnpool2d later</span><br><span class="line"></span><br><span class="line"><span class="comment"># floor向下取整 ceil向上取整，例如ceil_mode = True，保留超出部分</span></span><br><span class="line">- ceil_mode – when <span class="literal">True</span>, will use ceil instead of floor to compute the output shape</span><br></pre></td></tr></table></figure><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240804%E4%B8%8B%E5%8D%8832249522.png" alt=""></p><ul><li>注意输入的input和输出output均为</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(N, C, H, W)  <span class="comment"># (batch_size层数, Channel通道数, Height高, Width宽)</span></span><br></pre></td></tr></table></figure><ul><li>注意池化不可对long操作，故</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">input</span> = torch.tensor([</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, ],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, ],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, ],</span><br><span class="line">    [<span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, ],</span><br><span class="line">    [<span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, ],</span><br><span class="line">], dtype=torch.<span class="built_in">float</span>)  <span class="comment"># 转为float</span></span><br></pre></td></tr></table></figure><h3 id="3-示例代码">3. 示例代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> MaxPool2d</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = torch.tensor([</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, ],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, ],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, ],</span><br><span class="line">    [<span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, ],</span><br><span class="line">    [<span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, ],</span><br><span class="line">], dtype=torch.<span class="built_in">float</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1层，1通道，5x5大小，-1表示自动计算</span></span><br><span class="line"><span class="built_in">input</span> = torch.reshape(<span class="built_in">input</span>, (-<span class="number">1</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 神经网络</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MaxPoolNet</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(MaxPoolNet, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="variable language_">self</span>.maxpool1 = MaxPool2d(kernel_size=<span class="number">3</span>, ceil_mode=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, <span class="built_in">input</span></span>):</span><br><span class="line">        output = <span class="variable language_">self</span>.maxpool1(<span class="built_in">input</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">my_net = MaxPoolNet()</span><br><span class="line">output = my_net(<span class="built_in">input</span>)</span><br><span class="line"><span class="built_in">print</span>(output)</span><br><span class="line"></span><br><span class="line">&gt;&gt; tensor([[[[<span class="number">3.</span>, <span class="number">2.</span>],</span><br><span class="line">             [<span class="number">5.</span>, <span class="number">1.</span>]]]])</span><br></pre></td></tr></table></figure><h2 id="6-非线性激活（激活函数）">6 非线性激活（激活函数）</h2><h3 id="1-Non-linear-Activations">1. Non-linear Activations</h3><p>relu, sigmoid…</p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240804%E4%B8%8B%E5%8D%8835228634.png" alt=""></p><h3 id="2-调用和参数-3">2. 调用和参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否内存拷贝</span></span><br><span class="line">inplace – can optionally do the operation <span class="keyword">in</span>-place. Default: <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">ReLu(<span class="built_in">input</span>, inplace = <span class="literal">True</span>)</span><br><span class="line">&gt;&gt; <span class="built_in">input</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">output = ReLu(<span class="built_in">input</span>, inplace = <span class="literal">False</span>)</span><br><span class="line">&gt;&gt; <span class="built_in">input</span> = -<span class="number">1</span></span><br><span class="line">&gt;&gt; output = <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="3-示例代码-2">3. 示例代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> ReLU</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = torch.tensor([</span><br><span class="line">    [<span class="number">1</span>, -<span class="number">0.5</span>],</span><br><span class="line">    [-<span class="number">1</span>, <span class="number">3</span>],</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NonLinearActivationsRelu</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(NonLinearActivationsRelu, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="variable language_">self</span>.relu1 = ReLU(inplace=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, <span class="built_in">input</span></span>):</span><br><span class="line">        output = <span class="variable language_">self</span>.relu1(<span class="built_in">input</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">my_net = NonLinearActivationsRelu()</span><br><span class="line">output = my_net(<span class="built_in">input</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">input</span>)</span><br><span class="line">&gt;&gt; tensor([[ <span class="number">1.0000</span>, -<span class="number">0.5000</span>],</span><br><span class="line">           [-<span class="number">1.0000</span>,  <span class="number">3.0000</span>]])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(output)</span><br><span class="line">&gt;&gt; tensor([[<span class="number">1.</span>, <span class="number">0.</span>],</span><br><span class="line">           [<span class="number">0.</span>, <span class="number">3.</span>]])</span><br></pre></td></tr></table></figure><h2 id="7-正则化层">7 正则化层</h2><h3 id="1-Normalization">1. Normalization</h3><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240804%E4%B8%8B%E5%8D%8840656515.png" alt=""></p><h3 id="2-调用和参数-4">2. 调用和参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">torch.nn.BatchNorm2d(num_features, eps=<span class="number">1e-05</span>, momentum=<span class="number">0.1</span>, affine=<span class="literal">True</span>, track_running_stats=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">- num_features – C <span class="keyword">from</span> an expected <span class="built_in">input</span> of size (N,C,H,W)</span><br><span class="line"></span><br><span class="line">- eps – a value added to the denominator <span class="keyword">for</span> numerical stability. Default: <span class="number">1e-5</span></span><br><span class="line"></span><br><span class="line">- momentum – the value used <span class="keyword">for</span> the running_mean <span class="keyword">and</span> running_var computation. Can be <span class="built_in">set</span> to <span class="literal">None</span> <span class="keyword">for</span> cumulative moving average (i.e. simple average). Default: <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">- affine – a boolean value that when <span class="built_in">set</span> to <span class="literal">True</span>, this module has learnable affine parameters. Default: <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">- track_running_stats – a boolean value that when <span class="built_in">set</span> to <span class="literal">True</span>, this module tracks the running mean <span class="keyword">and</span> variance, <span class="keyword">and</span> when <span class="built_in">set</span> to <span class="literal">False</span>, this module does <span class="keyword">not</span> track such statistics, <span class="keyword">and</span> initializes statistics buffers running_mean <span class="keyword">and</span> running_var <span class="keyword">as</span> <span class="literal">None</span>. When these buffers are <span class="literal">None</span>, this module always uses batch statistics. <span class="keyword">in</span> both training <span class="keyword">and</span> <span class="built_in">eval</span> modes. Default: <span class="literal">True</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- <span class="built_in">input</span> - (N, C, H, W)</span><br><span class="line">- output - (N, C, H, W)</span><br></pre></td></tr></table></figure><h3 id="3-示例代码-3">3. 示例代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># With Learnable Parameters</span></span><br><span class="line">m = nn.BatchNorm2d(<span class="number">100</span>)</span><br><span class="line"><span class="comment"># Without Learnable Parameters</span></span><br><span class="line">m = nn.BatchNorm2d(<span class="number">100</span>, affine=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">input</span> = torch.randn(<span class="number">20</span>, <span class="number">100</span>, <span class="number">35</span>, <span class="number">45</span>)</span><br><span class="line">output = m(<span class="built_in">input</span>)</span><br></pre></td></tr></table></figure><h2 id="8-线性层">8 线性层</h2><h3 id="1-Linear">1. Linear</h3><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240804%E4%B8%8B%E5%8D%8841333231.png" alt=""></p><h3 id="2-调用和参数-5">2. 调用和参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">torch.nn.Linear(in_features, out_features, bias=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入层的神经元个数</span></span><br><span class="line">- in_features – size of each <span class="built_in">input</span> sample</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出层的神经元个数</span></span><br><span class="line">- out_features – size of each output sample</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否 w_i*x_i 后加上 b_i</span></span><br><span class="line">- bias – If <span class="built_in">set</span> to <span class="literal">False</span>, the layer will <span class="keyword">not</span> learn an additive bias. Default: <span class="literal">True</span></span><br></pre></td></tr></table></figure><h3 id="3-示例代码-4">3. 示例代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Linear</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"></span><br><span class="line">dataset = torchvision.datasets.CIFAR10(<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">False</span>, download=<span class="literal">False</span>,</span><br><span class="line">                                       transform=torchvision.transforms.ToTensor())</span><br><span class="line"></span><br><span class="line">dataloader = DataLoader(dataset, batch_size=<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LinearLayers</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(LinearLayers, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="variable language_">self</span>.linear1 = Linear(in_features=<span class="number">64</span> * <span class="number">3</span> * <span class="number">32</span> * <span class="number">32</span>, out_features=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, <span class="built_in">input</span></span>):</span><br><span class="line">        output = <span class="variable language_">self</span>.linear1(<span class="built_in">input</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">my_net = LinearLayers()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    <span class="comment"># print(imgs.shape)  # torch.Size([64, 3, 32, 32])  64一组，3个通道，32x32图片</span></span><br><span class="line">    <span class="comment"># output = torch.reshape(imgs, (1, 1, 1, -1))  # 每64个图片平铺为一个一维向量</span></span><br><span class="line">    <span class="comment"># output = my_net(output)  # torch.Size([1, 1, 1, 10])</span></span><br><span class="line"></span><br><span class="line">    output = torch.flatten(imgs)  <span class="comment"># torch.Size([196608])</span></span><br><span class="line">    output = my_net(output)  <span class="comment"># torch.Size([10])</span></span><br><span class="line">    <span class="built_in">print</span>(output.shape)</span><br></pre></td></tr></table></figure><h2 id="9-pytorch提供的模型">9 pytorch提供的模型</h2><p><a href="https://pytorch.org/docs/1.8.1/nn.html">https://pytorch.org/docs/1.8.1/nn.html</a></p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240804%E4%B8%8B%E5%8D%8843352338.png" alt=""></p><h2 id="10-Sequential">10 Sequential</h2><h3 id="1-Sequential简化">1. Sequential简化</h3><p>torch.nn -&gt; container -&gt; Sequential</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">torch.nn.Sequential(*args)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Example of using Sequential</span></span><br><span class="line">model = nn.Sequential(</span><br><span class="line">          nn.Conv2d(<span class="number">1</span>,<span class="number">20</span>,<span class="number">5</span>),</span><br><span class="line">          nn.ReLU(),</span><br><span class="line">          nn.Conv2d(<span class="number">20</span>,<span class="number">64</span>,<span class="number">5</span>),</span><br><span class="line">          nn.ReLU()</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"><span class="comment"># Example of using Sequential with OrderedDict</span></span><br><span class="line">model = nn.Sequential(OrderedDict([</span><br><span class="line">          (<span class="string">&#x27;conv1&#x27;</span>, nn.Conv2d(<span class="number">1</span>,<span class="number">20</span>,<span class="number">5</span>)),</span><br><span class="line">          (<span class="string">&#x27;relu1&#x27;</span>, nn.ReLU()),</span><br><span class="line">          (<span class="string">&#x27;conv2&#x27;</span>, nn.Conv2d(<span class="number">20</span>,<span class="number">64</span>,<span class="number">5</span>)),</span><br><span class="line">          (<span class="string">&#x27;relu2&#x27;</span>, nn.ReLU())</span><br><span class="line">        ]))</span><br></pre></td></tr></table></figure><h3 id="2-案例：CIFAR分类">2. 案例：CIFAR分类</h3><ul><li>CIFAR Model 结构</li></ul><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/Structure-of-CIFAR10-quick-model.png" alt="Structure-of-CIFAR10-quick-model"></p><ul><li>Note: 计算padding和stride</li></ul><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240731%E4%B8%8A%E5%8D%88110036714.png" alt=""></p><ul><li>tensorboard可视化结构</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x_test = torch.ones((<span class="number">64</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">32</span>))</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs_cifar&quot;</span>)</span><br><span class="line">writer.add_graph(cifar_net, x_test)</span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240804%E4%B8%8B%E5%8D%8850621811.png" alt=""></p>]]></content>
    
    
    <summary type="html">利用 Pytorch 搭建神经网络：搭建网络和基础知识</summary>
    
    
    
    <category term="Pytorch" scheme="https://blog.iskage.online/categories/Pytorch/"/>
    
    
    <category term="Pytorch" scheme="https://blog.iskage.online/tags/Pytorch/"/>
    
    <category term="神经网络" scheme="https://blog.iskage.online/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
    <category term="深度学习" scheme="https://blog.iskage.online/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="AI" scheme="https://blog.iskage.online/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>Pytorch 搭建神经网络（1）下载 Pytorch 和数据处理</title>
    <link href="https://blog.iskage.online/posts/3f7272cd.html"/>
    <id>https://blog.iskage.online/posts/3f7272cd.html</id>
    <published>2025-02-05T07:27:00.000Z</published>
    <updated>2025-02-05T03:19:50.037Z</updated>
    
    <content type="html"><![CDATA[<h1>下载Pytorch和数据处理</h1><h2 id="0-创建环境并下载Pytorch">0 创建环境并下载Pytorch</h2><p>官网：<a href="https://pytorch.org">https://pytorch.org</a></p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240729%E4%B8%8A%E5%8D%88110530197.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install pytorch::pytorch torchvision torchaudio -c pytorch</span><br></pre></td></tr></table></figure><h2 id="1-加载数据">1 加载数据</h2><h3 id="1-Dataset">1. Dataset</h3><p>提取数据并获取label</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyData</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, root_dir, label_dir</span>):</span><br><span class="line">        <span class="variable language_">self</span>.root_dir = root_dir</span><br><span class="line">        <span class="variable language_">self</span>.label_dir = label_dir</span><br><span class="line">        <span class="variable language_">self</span>.path = os.path.join(<span class="variable language_">self</span>.root_dir, <span class="variable language_">self</span>.label_dir)</span><br><span class="line">        <span class="variable language_">self</span>.img_path = os.listdir(<span class="variable language_">self</span>.path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, index</span>):</span><br><span class="line">        img_name = <span class="variable language_">self</span>.img_path[index]</span><br><span class="line">        img_item_path = os.path.join(<span class="variable language_">self</span>.root_dir, <span class="variable language_">self</span>.label_dir, img_name)</span><br><span class="line">        img = Image.<span class="built_in">open</span>(img_item_path)</span><br><span class="line">        label = <span class="variable language_">self</span>.label_dir</span><br><span class="line">        <span class="keyword">return</span> img, label</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(<span class="variable language_">self</span>.img_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root_dir = <span class="string">&#x27;dataset/train&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 蚂蚁数据集</span></span><br><span class="line">ants_label_dir = <span class="string">&#x27;ants_image&#x27;</span></span><br><span class="line">ants_dataset = MyData(root_dir, ants_label_dir)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 蜜蜂数据集</span></span><br><span class="line">bees_label_dir = <span class="string">&#x27;bees_image&#x27;</span></span><br><span class="line">bees_dataset = MyData(root_dir, bees_label_dir)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 整合 简单的拼接，按照谁在前整合后仍然在前的原则</span></span><br><span class="line">train_dataset = ants_dataset + bees_dataset</span><br></pre></td></tr></table></figure><p>常见数据集形式</p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240729%E4%B8%8B%E5%8D%88122404428.png" alt=""></p><h3 id="2-Dataloader">2. Dataloader</h3><p>为后面的网络提供不同的数据形式（打包）</p><h2 id="2-TensorBoard">2 TensorBoard</h2><h3 id="1-尝试">1. 尝试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&#x27;logs&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">    writer.add_scalar(<span class="string">&#x27;y=x&#x27;</span>, i, i)  <span class="comment"># 第一个是标题，第二个是y轴，第三个是x轴</span></span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tensorboard --logdir=文件夹名</span><br><span class="line">tensorboard --logdir=logs</span><br><span class="line"><span class="comment"># 改端口</span></span><br><span class="line">tensorboard --logdir=logs --port=<span class="number">6007</span></span><br></pre></td></tr></table></figure><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240729%E4%B8%8B%E5%8D%88123602383.png" alt=""></p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240729%E4%B8%8B%E5%8D%88123851459.png" alt=""></p><h3 id="2-训练集练习">2. 训练集练习</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&#x27;logs&#x27;</span>)</span><br><span class="line">image_path1 = <span class="string">&#x27;dataset/train/ants_image/0013035.jpg&#x27;</span></span><br><span class="line">image_PIL1 = Image.<span class="built_in">open</span>(image_path1)</span><br><span class="line">image_array1 = np.array(image_PIL1)</span><br><span class="line"></span><br><span class="line">image_path2 = <span class="string">&#x27;dataset/train/ants_image/5650366_e22b7e1065.jpg&#x27;</span></span><br><span class="line">image_PIL2 = Image.<span class="built_in">open</span>(image_path2)</span><br><span class="line">image_array2 = np.array(image_PIL2)</span><br><span class="line"></span><br><span class="line">writer.add_image(<span class="string">&quot;test&quot;</span>, image_array1, <span class="number">1</span>, dataformats=<span class="string">&#x27;HWC&#x27;</span>)</span><br><span class="line">writer.add_image(<span class="string">&quot;test&quot;</span>, image_array2, <span class="number">2</span>, dataformats=<span class="string">&#x27;HWC&#x27;</span>)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240729%E4%B8%8B%E5%8D%88125438974.png" alt=""></p><h2 id="3-Transforms">3 Transforms</h2><blockquote><p>[!NOTE]</p><p>torchvision的模块之一：Transforms</p></blockquote><h3 id="1-ToTensor">1. ToTensor</h3><ol><li>transforms.ToTensor将&quot;PIL Image&quot;和&quot;numpy.ndarray&quot;转化为tensor类型</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">img_path = <span class="string">&#x27;dataset/train/ants_image/5650366_e22b7e1065.jpg&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PIL Image 类型</span></span><br><span class="line">img = Image.<span class="built_in">open</span>(img_path)</span><br><span class="line"><span class="built_in">print</span>(img)</span><br><span class="line">&gt;&gt; &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=500x375 at <span class="number">0x13B2D7970</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># numpy.ndarray 类型</span></span><br><span class="line">cv_img = cv2.imread(img_path)</span><br><span class="line"><span class="built_in">print</span>(cv_img)</span><br><span class="line">&gt;&gt; [[[<span class="number">106</span> <span class="number">119</span>  <span class="number">97</span>]</span><br><span class="line">    [<span class="number">106</span> <span class="number">119</span>  <span class="number">97</span>]</span><br><span class="line">    [<span class="number">107</span> <span class="number">120</span>  <span class="number">98</span>]</span><br><span class="line">    ...</span><br><span class="line">    [<span class="number">110</span> <span class="number">115</span> <span class="number">116</span>]</span><br><span class="line">    [<span class="number">110</span> <span class="number">115</span> <span class="number">116</span>]</span><br><span class="line">    [<span class="number">110</span> <span class="number">115</span> <span class="number">116</span>]]]</span><br><span class="line"></span><br><span class="line">tensor_trans = transforms.ToTensor()</span><br><span class="line">tensor_img = tensor_trans(img)</span><br><span class="line"><span class="built_in">print</span>(tensor_img)</span><br><span class="line">&gt;&gt; tensor([[[<span class="number">0.3804</span>, <span class="number">0.3804</span>, <span class="number">0.3843</span>,  ..., <span class="number">0.3412</span>, <span class="number">0.3373</span>, <span class="number">0.3333</span>],</span><br><span class="line">           [<span class="number">0.3765</span>, <span class="number">0.3804</span>, <span class="number">0.3843</span>,  ..., <span class="number">0.3529</span>, <span class="number">0.3490</span>, <span class="number">0.3451</span>],</span><br><span class="line">           [<span class="number">0.3804</span>, <span class="number">0.3804</span>, <span class="number">0.3843</span>,  ..., <span class="number">0.3725</span>, <span class="number">0.3686</span>, <span class="number">0.3647</span>],</span><br><span class="line">           ...,</span><br><span class="line">           [<span class="number">0.5608</span>, <span class="number">0.5608</span>, <span class="number">0.5647</span>,  ..., <span class="number">0.4392</span>, <span class="number">0.4392</span>, <span class="number">0.4392</span>],</span><br><span class="line">           [<span class="number">0.5412</span>, <span class="number">0.5529</span>, <span class="number">0.5608</span>,  ..., <span class="number">0.4353</span>, <span class="number">0.4353</span>, <span class="number">0.4353</span>],</span><br><span class="line">           [<span class="number">0.5333</span>, <span class="number">0.5412</span>, <span class="number">0.5608</span>,  ..., <span class="number">0.4314</span>, <span class="number">0.4314</span>, <span class="number">0.4314</span>]]])</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-transforms使用">2. transforms使用</h3><p>Note：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">__call__函数的作用</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__call__</span>(<span class="params">self, use</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;__call__函数：&quot;</span> + use)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">self, use</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;一般函数：&quot;</span> + use)</span><br><span class="line"></span><br><span class="line">person = Person()</span><br><span class="line">person(<span class="string">&quot;call能直接利用类名括号调用&quot;</span>)</span><br><span class="line">person.func(<span class="string">&quot;必须使用.func方式&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="4-torchvision数据集">4 torchvision数据集</h2><p>torchvision.dataset</p><p>查看官方文档：<a href="https://pytorch.org/">https://pytorch.org/</a></p><p>0.9版本：<a href="https://pytorch.org/vision/0.9/">https://pytorch.org/vision/0.9/</a></p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240729%E4%B8%8B%E5%8D%8850535594.png" alt=""></p><h3 id="1-尝试使用">1. 尝试使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line">dataset_transforms = torchvision.transforms.Compose([</span><br><span class="line">    torchvision.transforms.ToTensor(),  <span class="comment"># 转为tensor类型</span></span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">train_set = torchvision.datasets.CIFAR10(root=<span class="string">&#x27;./dataset&#x27;</span>, train=<span class="literal">True</span>, transform=dataset_transforms, download=<span class="literal">True</span>)</span><br><span class="line">test_set = torchvision.datasets.CIFAR10(root=<span class="string">&#x27;./dataset&#x27;</span>, train=<span class="literal">False</span>, transform=dataset_transforms, download=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">img, target = test_set[0]</span></span><br><span class="line"><span class="string">print(img)  # &lt;PIL.Image.Image image mode=RGB size=32x32 at 0x14433FCA0&gt;</span></span><br><span class="line"><span class="string">print(target)  # 3</span></span><br><span class="line"><span class="string">print(test_set.classes[target])  # cat</span></span><br><span class="line"><span class="string">img.show()</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(log_dir=<span class="string">&#x27;./logs_cifar&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    img, target = test_set[i]</span><br><span class="line">    writer.add_image(<span class="string">&#x27;test_set&#x27;</span>, img, i)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure><h3 id="2-数据集的下载">2. 数据集的下载</h3><p>进入数据集的源码（CIFAR10），查看url即为下载链接</p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240729%E4%B8%8B%E5%8D%8853613373.png" alt=""></p><h2 id="5-Dataloader">5 Dataloader</h2><p>官方文档：<a href="https://pytorch.org/docs/1.8.1/data.html?highlight=dataloader#torch.utils.data.DataLoader">https://pytorch.org/docs/1.8.1/data.html?highlight=dataloader#torch.utils.data.DataLoader</a></p><h3 id="1-batch-size">1. batch_size</h3><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240730%E4%B8%8A%E5%8D%8894027575.png" alt=""></p><h3 id="2-shuffle">2. shuffle</h3><p>shuffle打乱顺序</p><h3 id="3-代码">3. 代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line">dataset_transforms = torchvision.transforms.Compose([</span><br><span class="line">    torchvision.transforms.ToTensor(),  <span class="comment"># 转为tensor类型</span></span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">test_set = torchvision.datasets.CIFAR10(root=<span class="string">&#x27;./dataset&#x27;</span>, train=<span class="literal">False</span>, transform=dataset_transforms, download=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">test_loader = DataLoader(dataset=test_set, batch_size=<span class="number">64</span>, shuffle=<span class="literal">True</span>, num_workers=<span class="number">0</span>, drop_last=<span class="literal">True</span>)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1. batch_size=64 每次取4个数据进行打包：test_set[0-63]=dataset[0-63]打包</span></span><br><span class="line"><span class="string">2. shuffle打乱顺序</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&#x27;dataloader&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):</span><br><span class="line">    step = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> test_loader:</span><br><span class="line">        imgs, targets = data</span><br><span class="line">        writer.add_images(<span class="string">&#x27;Epoch: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(epoch), imgs, step)</span><br><span class="line">        step += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">利用 Pytorch 搭建神经网络：数据处理和下载</summary>
    
    
    
    <category term="Pytorch" scheme="https://blog.iskage.online/categories/Pytorch/"/>
    
    
    <category term="Pytorch" scheme="https://blog.iskage.online/tags/Pytorch/"/>
    
    <category term="神经网络" scheme="https://blog.iskage.online/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
    <category term="深度学习" scheme="https://blog.iskage.online/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="AI" scheme="https://blog.iskage.online/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>微观经济学 笔记目录</title>
    <link href="https://blog.iskage.online/posts/73f9c55d.html"/>
    <id>https://blog.iskage.online/posts/73f9c55d.html</id>
    <published>2025-01-21T06:18:00.000Z</published>
    <updated>2025-01-20T08:10:36.076Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p><strong>文章为博主根据复旦大学本科课程《微观经济学》整理的课程笔记。点击链接即可前往对应文章查看，笔记以pdf的格式展示。更多信息，可前往本人的<a href="https://github.com/isKage/iskage.github.io">Github库</a>中查询。或者直接右键下载。</strong></p></div><div class="note danger flat"><p><strong>转载请注明出处，要求见文末</strong></p></div><p>课程书籍为罗伯特·S·平狄克/鲁宾菲尔德编写，中国人民大学出版社出版的<a href="https://book.douban.com/subject/4039368/">《微观经济学》</a></p><div class="note no-icon flat"><p><strong>笔记目录</strong></p><p><a href="./b1fd752e.html">1 绪论</a></p><p><a href="./ac04a21d.html">2 供给和需求的基本原理</a></p><p><a href="./d039b3c8.html">3 消费者行为</a></p><p><a href="./cd431d80.html">4 个别需求和市场需求</a></p><p><a href="./7bee8e99.html">5 生产</a></p><p><a href="./c4281815.html">6 生产成本</a></p><p><a href="./cfb40b0.html">7 利润的最大化和竞争性供给</a></p><p><a href="./3aba38be.html">8 竞争性市场分析</a></p><p><a href="./c5b9c11f.html">9 市场势力：垄断和买方垄断</a></p><p><a href="./43074da4.html">10 有市场势力的定价</a></p><p><a href="./66ca6135.html">11 垄断竞争和寡头垄断</a></p></div>]]></content>
    
    
    <summary type="html">复旦大学《微观经济学》课程笔记，已更新完全</summary>
    
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/categories/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/tags/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>微观经济学(11)垄断竞争和寡头垄断 (完)</title>
    <link href="https://blog.iskage.online/posts/66ca6135.html"/>
    <id>https://blog.iskage.online/posts/66ca6135.html</id>
    <published>2025-01-20T07:27:40.000Z</published>
    <updated>2025-01-20T08:10:45.160Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p><strong>返回<a href="./73f9c55d.html">笔记目录</a></strong></p></div><div class="note info flat"><p>因为文件数据存储在<strong>中国香港地区</strong>，所以加载需要少量时间。如长时间无法加载，可考虑使用<s>VPN代理</s>。</p></div>  <div id="pdf-container" style="position: relative;">    <iframe id="pdf-frame" src="https://oss.iskage.online/pdfs/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6%E7%AC%94%E8%AE%B0/Chapter%2012%20Monopolistic%20Competition%20and%20Oligopoly.pdf#toolbar=0" width="100%" height="600px" allowfullscreen></iframe>    <button id="fullscreen-btn" class="fullscreen-btn" style="position: absolute; top: 10px; right: 10px; z-index: 10;">全屏模式</button>  </div>  <script src="/js/pdf-viewer.js"></script>  ]]></content>
    
    
    <summary type="html">《微观经济学》（平狄克）课程第11讲：垄断竞争和寡头垄断 Chapter 12 Monopolistic Competition and Oligopoly</summary>
    
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/categories/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/tags/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>微观经济学(10)有市场势力的定价</title>
    <link href="https://blog.iskage.online/posts/43074da4.html"/>
    <id>https://blog.iskage.online/posts/43074da4.html</id>
    <published>2025-01-20T07:27:31.000Z</published>
    <updated>2025-01-20T08:09:18.936Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p><strong>返回<a href="./73f9c55d.html">笔记目录</a></strong></p></div><div class="note info flat"><p>因为文件数据存储在<strong>中国香港地区</strong>，所以加载需要少量时间。如长时间无法加载，可考虑使用<s>VPN代理</s>。</p></div>  <div id="pdf-container" style="position: relative;">    <iframe id="pdf-frame" src="https://oss.iskage.online/pdfs/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6%E7%AC%94%E8%AE%B0/Chapter%2011%20Pricing%20with%20Market%20Power.pdf#toolbar=0" width="100%" height="600px" allowfullscreen></iframe>    <button id="fullscreen-btn" class="fullscreen-btn" style="position: absolute; top: 10px; right: 10px; z-index: 10;">全屏模式</button>  </div>  <script src="/js/pdf-viewer.js"></script>  ]]></content>
    
    
    <summary type="html">《微观经济学》（平狄克）课程第10讲：有市场势力的定价 Chapter 11 Pricing with Market Power</summary>
    
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/categories/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/tags/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>微观经济学(9)市场势力：垄断和买方垄断</title>
    <link href="https://blog.iskage.online/posts/c5b9c11f.html"/>
    <id>https://blog.iskage.online/posts/c5b9c11f.html</id>
    <published>2025-01-20T07:27:30.000Z</published>
    <updated>2025-01-20T08:08:20.752Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p><strong>返回<a href="./73f9c55d.html">笔记目录</a></strong></p></div><div class="note info flat"><p>因为文件数据存储在<strong>中国香港地区</strong>，所以加载需要少量时间。如长时间无法加载，可考虑使用<s>VPN代理</s>。</p></div>  <div id="pdf-container" style="position: relative;">    <iframe id="pdf-frame" src="https://oss.iskage.online/pdfs/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6%E7%AC%94%E8%AE%B0/Chapter%2010%20Market%20Power_%20Monopoly%20and%20Monopsony.pdf#toolbar=0" width="100%" height="600px" allowfullscreen></iframe>    <button id="fullscreen-btn" class="fullscreen-btn" style="position: absolute; top: 10px; right: 10px; z-index: 10;">全屏模式</button>  </div>  <script src="/js/pdf-viewer.js"></script>  ]]></content>
    
    
    <summary type="html">《微观经济学》（平狄克）课程第9讲：市场势力：垄断和买方垄断 Chapter 10 Market Power：Monopoly and Monopsony</summary>
    
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/categories/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/tags/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>微观经济学(8)竞争性市场分析</title>
    <link href="https://blog.iskage.online/posts/3aba38be.html"/>
    <id>https://blog.iskage.online/posts/3aba38be.html</id>
    <published>2025-01-20T07:27:24.000Z</published>
    <updated>2025-01-20T08:06:26.104Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p><strong>返回<a href="./73f9c55d.html">笔记目录</a></strong></p></div><div class="note info flat"><p>因为文件数据存储在<strong>中国香港地区</strong>，所以加载需要少量时间。如长时间无法加载，可考虑使用<s>VPN代理</s>。</p></div>  <div id="pdf-container" style="position: relative;">    <iframe id="pdf-frame" src="https://oss.iskage.online/pdfs/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6%E7%AC%94%E8%AE%B0/Chapter%2009%20Competitive%20Markets.pdf#toolbar=0" width="100%" height="600px" allowfullscreen></iframe>    <button id="fullscreen-btn" class="fullscreen-btn" style="position: absolute; top: 10px; right: 10px; z-index: 10;">全屏模式</button>  </div>  <script src="/js/pdf-viewer.js"></script>  ]]></content>
    
    
    <summary type="html">《微观经济学》（平狄克）课程第8讲：竞争性市场分析 Chapter 09 Competitive Markets</summary>
    
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/categories/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/tags/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>微观经济学(7)利润的最大化和竞争性供给</title>
    <link href="https://blog.iskage.online/posts/cfb40b0.html"/>
    <id>https://blog.iskage.online/posts/cfb40b0.html</id>
    <published>2025-01-20T07:27:20.000Z</published>
    <updated>2025-01-20T08:05:54.625Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p><strong>返回<a href="./73f9c55d.html">笔记目录</a></strong></p></div><div class="note info flat"><p>因为文件数据存储在<strong>中国香港地区</strong>，所以加载需要少量时间。如长时间无法加载，可考虑使用<s>VPN代理</s>。</p></div>  <div id="pdf-container" style="position: relative;">    <iframe id="pdf-frame" src="https://oss.iskage.online/pdfs/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6%E7%AC%94%E8%AE%B0/Chapter%2008%20Max%20Profit%20and%20Competetive%20Supply.pdf#toolbar=0" width="100%" height="600px" allowfullscreen></iframe>    <button id="fullscreen-btn" class="fullscreen-btn" style="position: absolute; top: 10px; right: 10px; z-index: 10;">全屏模式</button>  </div>  <script src="/js/pdf-viewer.js"></script>  ]]></content>
    
    
    <summary type="html">《微观经济学》（平狄克）课程第7讲：利润的最大化和竞争性供给 Chapter Chapter 08 Max Profit and Competetive Supply</summary>
    
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/categories/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/tags/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>微观经济学(6)生产成本</title>
    <link href="https://blog.iskage.online/posts/c4281815.html"/>
    <id>https://blog.iskage.online/posts/c4281815.html</id>
    <published>2025-01-20T07:27:11.000Z</published>
    <updated>2025-01-20T08:02:03.558Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p><strong>返回<a href="./73f9c55d.html">笔记目录</a></strong></p></div><div class="note info flat"><p>因为文件数据存储在<strong>中国香港地区</strong>，所以加载需要少量时间。如长时间无法加载，可考虑使用<s>VPN代理</s>。</p></div>  <div id="pdf-container" style="position: relative;">    <iframe id="pdf-frame" src="https://oss.iskage.online/pdfs/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6%E7%AC%94%E8%AE%B0/Chapter%2007%20Costs%20of%20Production.pdf#toolbar=0" width="100%" height="600px" allowfullscreen></iframe>    <button id="fullscreen-btn" class="fullscreen-btn" style="position: absolute; top: 10px; right: 10px; z-index: 10;">全屏模式</button>  </div>  <script src="/js/pdf-viewer.js"></script>  ]]></content>
    
    
    <summary type="html">《微观经济学》（平狄克）课程第6讲：生产成本 Chapter 07 Costs of Production</summary>
    
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/categories/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/tags/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>微观经济学(5)生产</title>
    <link href="https://blog.iskage.online/posts/7bee8e99.html"/>
    <id>https://blog.iskage.online/posts/7bee8e99.html</id>
    <published>2025-01-20T07:27:10.000Z</published>
    <updated>2025-01-20T08:00:23.315Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p><strong>返回<a href="./73f9c55d.html">笔记目录</a></strong></p></div><div class="note info flat"><p>因为文件数据存储在<strong>中国香港地区</strong>，所以加载需要少量时间。如长时间无法加载，可考虑使用<s>VPN代理</s>。</p></div>  <div id="pdf-container" style="position: relative;">    <iframe id="pdf-frame" src="https://oss.iskage.online/pdfs/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6%E7%AC%94%E8%AE%B0/Chapter%2006%20Production.pdf#toolbar=0" width="100%" height="600px" allowfullscreen></iframe>    <button id="fullscreen-btn" class="fullscreen-btn" style="position: absolute; top: 10px; right: 10px; z-index: 10;">全屏模式</button>  </div>  <script src="/js/pdf-viewer.js"></script>  ]]></content>
    
    
    <summary type="html">《微观经济学》（平狄克）课程第5讲：生产 Chapter 06 Production</summary>
    
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/categories/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/tags/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>微观经济学(4)个别需求和市场需求</title>
    <link href="https://blog.iskage.online/posts/cd431d80.html"/>
    <id>https://blog.iskage.online/posts/cd431d80.html</id>
    <published>2025-01-20T07:27:04.000Z</published>
    <updated>2025-01-20T07:58:15.685Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p><strong>返回<a href="./73f9c55d.html">笔记目录</a></strong></p></div><div class="note info flat"><p>因为文件数据存储在<strong>中国香港地区</strong>，所以加载需要少量时间。如长时间无法加载，可考虑使用<s>VPN代理</s>。</p></div>  <div id="pdf-container" style="position: relative;">    <iframe id="pdf-frame" src="https://oss.iskage.online/pdfs/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6%E7%AC%94%E8%AE%B0/Chapter%2004%20Demand%20.pdf#toolbar=0" width="100%" height="600px" allowfullscreen></iframe>    <button id="fullscreen-btn" class="fullscreen-btn" style="position: absolute; top: 10px; right: 10px; z-index: 10;">全屏模式</button>  </div>  <script src="/js/pdf-viewer.js"></script>  ]]></content>
    
    
    <summary type="html">《微观经济学》（平狄克）课程第4讲：个别需求和市场需求 Chapter 04 Demand</summary>
    
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/categories/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/tags/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>微观经济学(3)消费者行为</title>
    <link href="https://blog.iskage.online/posts/d039b3c8.html"/>
    <id>https://blog.iskage.online/posts/d039b3c8.html</id>
    <published>2025-01-20T07:27:03.000Z</published>
    <updated>2025-01-20T07:56:36.875Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p><strong>返回<a href="./73f9c55d.html">笔记目录</a></strong></p></div><div class="note info flat"><p>因为文件数据存储在<strong>中国香港地区</strong>，所以加载需要少量时间。如长时间无法加载，可考虑使用<s>VPN代理</s>。</p></div>  <div id="pdf-container" style="position: relative;">    <iframe id="pdf-frame" src="https://oss.iskage.online/pdfs/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6%E7%AC%94%E8%AE%B0/Chapter%2003%20Consumer%20Behaviors%20.pdf#toolbar=0" width="100%" height="600px" allowfullscreen></iframe>    <button id="fullscreen-btn" class="fullscreen-btn" style="position: absolute; top: 10px; right: 10px; z-index: 10;">全屏模式</button>  </div>  <script src="/js/pdf-viewer.js"></script>  ]]></content>
    
    
    <summary type="html">《微观经济学》（平狄克）课程第3讲：消费者行为 Chapter 03 Consumer Behaviors</summary>
    
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/categories/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/tags/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>微观经济学(2)供给和需求的基本原理</title>
    <link href="https://blog.iskage.online/posts/ac04a21d.html"/>
    <id>https://blog.iskage.online/posts/ac04a21d.html</id>
    <published>2025-01-20T07:27:01.000Z</published>
    <updated>2025-01-20T07:54:30.500Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p><strong>返回<a href="./73f9c55d.html">笔记目录</a></strong></p></div><div class="note info flat"><p>因为文件数据存储在<strong>中国香港地区</strong>，所以加载需要少量时间。如长时间无法加载，可考虑使用<s>VPN代理</s>。</p></div>  <div id="pdf-container" style="position: relative;">    <iframe id="pdf-frame" src="https://oss.iskage.online/pdfs/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6%E7%AC%94%E8%AE%B0/Chapter%2002%20The%20Basics%20of%20Supply%20and%20Demand.pdf#toolbar=0" width="100%" height="600px" allowfullscreen></iframe>    <button id="fullscreen-btn" class="fullscreen-btn" style="position: absolute; top: 10px; right: 10px; z-index: 10;">全屏模式</button>  </div>  <script src="/js/pdf-viewer.js"></script>  ]]></content>
    
    
    <summary type="html">《微观经济学》（平狄克）课程第2讲：供给和需求的基本原理 Chapter 02 The Basics of Supply and Demand</summary>
    
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/categories/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/tags/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>微观经济学(1)绪论</title>
    <link href="https://blog.iskage.online/posts/b1fd752e.html"/>
    <id>https://blog.iskage.online/posts/b1fd752e.html</id>
    <published>2025-01-20T07:27:00.000Z</published>
    <updated>2025-01-20T07:51:48.998Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p><strong>返回<a href="./73f9c55d.html">笔记目录</a></strong></p></div><div class="note info flat"><p>因为文件数据存储在<strong>中国香港地区</strong>，所以加载需要少量时间。如长时间无法加载，可考虑使用<s>VPN代理</s>。</p></div>  <div id="pdf-container" style="position: relative;">    <iframe id="pdf-frame" src="https://oss.iskage.online/pdfs/微观经济学笔记/Chapter%2001%20Preliminaries.pdf#toolbar=0" width="100%" height="600px" allowfullscreen></iframe>    <button id="fullscreen-btn" class="fullscreen-btn" style="position: absolute; top: 10px; right: 10px; z-index: 10;">全屏模式</button>  </div>  <script src="/js/pdf-viewer.js"></script>  ]]></content>
    
    
    <summary type="html">《微观经济学》（平狄克）课程第1讲：绪论 Chapter 01 Preliminaries</summary>
    
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/categories/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
    
    <category term="微观经济学" scheme="https://blog.iskage.online/tags/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>MySQL入门：简单尝试</title>
    <link href="https://blog.iskage.online/posts/9d7c017f.html"/>
    <id>https://blog.iskage.online/posts/9d7c017f.html</id>
    <published>2025-01-18T06:18:00.000Z</published>
    <updated>2025-01-18T04:24:25.887Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p><strong>这篇文章相对入门地介绍了<code>MySQL</code>里的相关语法和使用，并结合<code>Python + Flask</code>框架初步探索里网页开发。</strong></p></div><h2 id="1-MySQL入门">1. MySQL入门</h2><h3 id="1-1-启动MySQL">1.1 启动MySQL:</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br></pre></td></tr></table></figure><h3 id="1-2-查看已有数据库">1.2 查看已有数据库:</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> databases;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> information_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> performance_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sys                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> test               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br></pre></td></tr></table></figure><h3 id="1-3-创建数据库">1.3 创建数据库:</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database 数据库名 <span class="keyword">DEFAULT</span> CHARSET utf8 <span class="keyword">COLLATE</span> utf8_general_ci;  </span><br></pre></td></tr></table></figure><h3 id="1-4-删除数据库">1.4 删除数据库:</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> database 数据库名;</span><br></pre></td></tr></table></figure><h3 id="1-5-进入数据库">1.5 进入数据库:</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use 数据库名;</span><br></pre></td></tr></table></figure><h3 id="1-6-查看数据库下所有数据表">1.6 查看数据库下所有数据表:</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> tables;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> tables;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_test <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> tb1            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br></pre></td></tr></table></figure><h3 id="1-7-创建表">1.7 创建表:</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> 表名(</span><br><span class="line">  列名 类型,</span><br><span class="line">  列名 类型,</span><br><span class="line">  列名 类型</span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>e.g.</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> tb1(</span><br><span class="line">    id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">16</span>),</span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>不能为空/允许为空</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> tb1(</span><br><span class="line">    id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">16</span>) <span class="keyword">not null</span>, <span class="comment">-- 不能为空</span></span><br><span class="line">    age <span class="type">int</span> <span class="keyword">null</span>         <span class="comment">-- 可以为空</span></span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>默认值</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> tb1(</span><br><span class="line">    id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">16</span>) <span class="keyword">not null</span>,</span><br><span class="line">    age <span class="type">int</span> <span class="keyword">default</span> <span class="number">3</span>        <span class="comment">-- 设置默认为3</span></span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>主键</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> tb1(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary key</span>,       <span class="comment">-- 不能为空，不能重复</span></span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">16</span>),</span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>一般设置，主键+自增 <code>标准</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> tb1(</span><br><span class="line">    id <span class="type">int</span> auto_increment <span class="keyword">primary key</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">16</span>),</span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><h3 id="1-8-删除表">1.8 删除表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名;</span><br></pre></td></tr></table></figure><h3 id="1-9-展示表信息">1.9 展示表信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> 表名;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> tb1;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> id    <span class="operator">|</span> <span class="type">int</span>         <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> auto_increment <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name  <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">16</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> age   <span class="operator">|</span> <span class="type">int</span>         <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h2 id="2-常见数据类型">2 常见数据类型</h2><h3 id="2-1-int整型">2.1 int整型</h3><ul><li>tinyint</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">有符号，取值范围：-128～127（有正有负）[默认]</span><br><span class="line">无符号，取值范围：0～255（只有正）</span><br></pre></td></tr></table></figure><ul><li>有符号，取值范围：-128～127（有正有负）[默认]</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> tb2(</span><br><span class="line">id <span class="type">int</span> auto_increment <span class="keyword">primary key</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">16</span>),</span><br><span class="line">age tinyint</span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>无符号，取值范围：0～255（只有正）</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> tb2(</span><br><span class="line">id <span class="type">int</span> auto_increment <span class="keyword">primary key</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">16</span>),</span><br><span class="line">age tinyint unsigned</span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>int</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">int</span><br><span class="line">有符号，-2147483648～2147483647</span><br><span class="line"></span><br><span class="line">int unsigned</span><br><span class="line">无符号，0～4294967295</span><br></pre></td></tr></table></figure><ul><li>bigint</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bigint</span><br><span class="line">有符号，范围更大</span><br><span class="line"></span><br><span class="line">bigint unsigned</span><br><span class="line">无符号，范围更大</span><br></pre></td></tr></table></figure><h4 id="练习：整型">练习：整型</h4><ul><li>创建表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> tb2(</span><br><span class="line">id <span class="type">bigint</span> auto_increment <span class="keyword">primary key</span>,</span><br><span class="line">  salary <span class="type">int</span>,</span><br><span class="line">  age tinyint</span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>插入数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert into</span> tb2(salary, age) <span class="keyword">values</span>(<span class="number">10000</span>, <span class="number">18</span>);</span><br><span class="line"><span class="keyword">insert into</span> tb2(salary, age) <span class="keyword">values</span>(<span class="number">20000</span>, <span class="number">28</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert into</span> tb2(salary, age) <span class="keyword">values</span>(<span class="number">30000</span>, <span class="number">38</span>), (<span class="number">40000</span>,<span class="number">40</span>);</span><br></pre></td></tr></table></figure><ul><li>查看数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tb2;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tb2;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> salary <span class="operator">|</span> age  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span>   <span class="number">18</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span>  <span class="number">20000</span> <span class="operator">|</span>   <span class="number">28</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span>  <span class="number">30000</span> <span class="operator">|</span>   <span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span>  <span class="number">40000</span> <span class="operator">|</span>   <span class="number">40</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="2-2-浮点数">2.2 浮点数</h3><ul><li><p>float</p></li><li><p>double</p></li><li><p>decimal</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">准确的小数，m是数字总个数（负号不算），d是小数后个数。</span><br><span class="line">m最大为65，d最大为30</span><br></pre></td></tr></table></figure><p><code>例如</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> tb3(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary key</span> auto_increment,</span><br><span class="line">salary <span class="type">decimal</span>(<span class="number">8</span>, <span class="number">2</span>)</span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert into</span> tb3(salary) <span class="keyword">values</span>(<span class="number">1.28</span>);</span><br><span class="line"><span class="keyword">insert into</span> tb3(salary) <span class="keyword">values</span>(<span class="number">5.289</span>);</span><br><span class="line"><span class="keyword">insert into</span> tb3(salary) <span class="keyword">values</span>(<span class="number">1.282</span>); <span class="comment">-- 整数部分不能超过m位</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tb3;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tb3;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> salary <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span>   <span class="number">1.28</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span>   <span class="number">5.29</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span>   <span class="number">1.28</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="2-3-字符串">2.3 字符串</h3><ul><li>char(m)</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">定长字符串，速度快</span><br><span class="line">m<span class="operator">&lt;=</span><span class="number">225</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 无论多长，固定11位存储【超出报错】</span></span><br><span class="line"><span class="keyword">create table</span> tb4(</span><br><span class="line">  id <span class="type">int</span> auto_increment <span class="keyword">primary key</span>,</span><br><span class="line">  mobile <span class="type">char</span>(<span class="number">11</span>)</span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>varchar(m)</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">变长字符串，节省空间</span><br><span class="line">m<span class="operator">&lt;=</span><span class="number">65535</span>bit</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 真实多长，按照多长存储【超出报错】</span></span><br><span class="line"><span class="keyword">create table</span> tb4(</span><br><span class="line">  id <span class="type">int</span> auto_increment <span class="keyword">primary key</span>,</span><br><span class="line">  mobile <span class="type">varchar</span>(<span class="number">11</span>)</span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>text</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">变长的大字符串，可以有<span class="number">65535</span>（<span class="number">2</span><span class="operator">*</span><span class="operator">*</span><span class="number">16</span><span class="number">-1</span>）个字符，一般用于长文本</span><br><span class="line"></span><br><span class="line"><span class="keyword">create table</span> news(</span><br><span class="line">  id <span class="type">int</span> auto_increment <span class="keyword">primary key</span>,</span><br><span class="line">  title <span class="type">varchar</span>(<span class="number">128</span>),</span><br><span class="line">  content text</span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ul><li>mediumtext</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2**24-1</span><br></pre></td></tr></table></figure><ul><li>longtext</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2**32-1</span><br></pre></td></tr></table></figure><h3 id="2-4-时间">2.4 时间</h3><ul><li>datetime</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YYYY<span class="operator">-</span>MM<span class="operator">-</span>DD HH:MM:SS (<span class="number">1000</span><span class="number">-01</span><span class="number">-01</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span><span class="operator">/</span><span class="number">9999</span><span class="number">-12</span><span class="number">-31</span> <span class="number">23</span>:<span class="number">59</span>:<span class="number">59</span>)</span><br></pre></td></tr></table></figure><ul><li>date</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YYYY<span class="operator">-</span>MM<span class="operator">-</span>DD (<span class="number">1000</span><span class="number">-01</span><span class="number">-01</span><span class="operator">/</span><span class="number">9999</span><span class="number">-12</span><span class="number">-31</span>)</span><br></pre></td></tr></table></figure><h4 id="练习题：用户表">练习题：用户表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> account(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary key</span> auto_increment,</span><br><span class="line">  name <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">not null</span>,</span><br><span class="line">  password <span class="type">char</span>(<span class="number">64</span>) <span class="keyword">not null</span>,</span><br><span class="line">  email <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">not null</span>,</span><br><span class="line">  age tinyint,</span><br><span class="line">  salary <span class="type">decimal</span>(<span class="number">10</span>, <span class="number">2</span>),</span><br><span class="line">  ctime datetime</span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert into</span> account(name, password, email, age, salary, ctime) <span class="keyword">values</span>(&quot;Mike&quot;, &quot;123&quot;, &quot;xx@live.com&quot;, <span class="number">19</span>, <span class="number">1000.20</span>, &quot;2023-12-11 11:11&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> account;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> account;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+----------+-------------+------+---------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span> password <span class="operator">|</span> email       <span class="operator">|</span> age  <span class="operator">|</span> salary  <span class="operator">|</span> ctime               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+----------+-------------+------+---------+---------------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Mike <span class="operator">|</span> <span class="number">123</span>      <span class="operator">|</span> xx<span class="variable">@live</span>.com <span class="operator">|</span>   <span class="number">19</span> <span class="operator">|</span> <span class="number">1000.20</span> <span class="operator">|</span> <span class="number">2023</span><span class="number">-12</span><span class="number">-11</span> <span class="number">11</span>:<span class="number">11</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+----------+-------------+------+---------+---------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h3 id="3-数据行操作">3. 数据行操作</h3><h4 id="3-1-增加数据">3.1 增加数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert into</span> 表名(列<span class="number">1</span>, 列<span class="number">2</span>) <span class="keyword">values</span>(值, 值);</span><br><span class="line"><span class="keyword">insert into</span> 表名(列<span class="number">1</span>, 列<span class="number">2</span>) <span class="keyword">values</span>(值, 值);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert into</span> 表名(列<span class="number">1</span>, 列<span class="number">2</span>) <span class="keyword">values</span>(值, 值), (值, 值), (值, 值), (值, 值);</span><br></pre></td></tr></table></figure><h4 id="3-2-删除数据">3.2 删除数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件 <span class="keyword">and</span> 条件;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件 <span class="keyword">or</span> 条件;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 把account全部删除</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> account;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除account表中id=3的行</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> account <span class="keyword">where</span> id<span class="operator">=</span><span class="number">3</span>;</span><br></pre></td></tr></table></figure><h4 id="3-3-修改数据">3.3 修改数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 列<span class="operator">=</span>值;</span><br><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 列<span class="operator">=</span>值, 列<span class="operator">=</span>值;</span><br><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 列<span class="operator">=</span>值 <span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> account <span class="keyword">set</span> password<span class="operator">=</span>&quot;hahahah&quot;;</span><br><span class="line"><span class="keyword">update</span> account <span class="keyword">set</span> email<span class="operator">=</span>&quot;qwqwqw&quot; <span class="keyword">where</span> id<span class="operator">&gt;</span><span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> account <span class="keyword">set</span> age<span class="operator">=</span>age<span class="operator">+</span><span class="number">3</span> <span class="keyword">where</span> id<span class="operator">&gt;</span><span class="number">5</span>;</span><br></pre></td></tr></table></figure><h4 id="3-4-查询数据">3.4 查询数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名;</span><br><span class="line"><span class="keyword">select</span> 列名, 列名 <span class="keyword">from</span> 表名;</span><br><span class="line"><span class="keyword">select</span> 列名, 列名 <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> account;</span><br><span class="line"><span class="keyword">select</span> name, email <span class="keyword">from</span> account;</span><br><span class="line"><span class="keyword">select</span> name, email <span class="keyword">from</span> account <span class="keyword">where</span> id<span class="operator">&gt;</span><span class="number">3</span>;</span><br></pre></td></tr></table></figure><h3 id="4-员工管理案例">4. 员工管理案例</h3><h4 id="4-1-要求">4.1 要求</h4><ul><li><p>使用mysql内置工具</p><ul><li><p>创建数据库：unicom  <code>以建立联通员工管理数据库为例</code></p></li><li><p>数据表：admin</p></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">表名：admin</span><br><span class="line">列：</span><br><span class="line">    id：主键，自增</span><br><span class="line">    username：字符串，不为空</span><br><span class="line">    password：字符串，不为空</span><br><span class="line">    mobile：字符串，不为空</span><br></pre></td></tr></table></figure><p>​</p><ul><li>python代码实现<ul><li>添加用户</li><li>删除用户</li><li>查看用户</li><li>更新用户信息</li></ul></li></ul><h4 id="4-2-mysql创建">4.2 mysql创建</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database unicom <span class="keyword">DEFAULT</span> CHARSET utf8 <span class="keyword">COLLATE</span> utf8_general_ci; </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">use unicom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create table</span> admin(</span><br><span class="line">  id <span class="type">int</span> <span class="keyword">not null</span> auto_increment <span class="keyword">primary key</span>,</span><br><span class="line">  username <span class="type">varchar</span>(<span class="number">16</span>) <span class="keyword">not null</span>,</span><br><span class="line">  password <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">not null</span>,</span><br><span class="line">  mobile <span class="type">char</span>(<span class="number">11</span>) <span class="keyword">not null</span></span><br><span class="line">) <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><h4 id="4-3-python操作">4.3 python操作</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pymysql</span><br></pre></td></tr></table></figure><h5 id="4-3-1-简单创建和操作">4.3.1 简单创建和操作</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 链接mysql</span></span><br><span class="line">conn = pymysql.connect(host=<span class="string">&quot;127.0.0.1&quot;</span>, port=<span class="number">3306</span>, user=<span class="string">&quot;root&quot;</span>, passwd=<span class="string">&quot;&lt;PASSWORD&gt;&quot;</span>, charset=<span class="string">&#x27;utf8&#x27;</span>, db=<span class="string">&#x27;unicom&#x27;</span>)</span><br><span class="line">cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 发送指令</span></span><br><span class="line">cursor.execute(<span class="string">&#x27;insert into admin(username,password,mobile) values(&quot;mike&quot;,&quot;abc123&quot;,&quot;12345678901&quot;)&#x27;</span>)</span><br><span class="line">conn.commit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 关闭链接</span></span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> admin;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span> password <span class="operator">|</span> mobile      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> mike     <span class="operator">|</span> abc123   <span class="operator">|</span> <span class="number">12345678901</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br></pre></td></tr></table></figure><ul><li>格式化发送指令（列表）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2. 格式化发送指令[]</span></span><br><span class="line">sql = <span class="string">&#x27;insert into admin(username,password,mobile) values(%s,%s,%s)&#x27;</span></span><br><span class="line">cursor.execute(sql, [<span class="string">&quot;Ann&quot;</span>, <span class="string">&quot;qwe456&quot;</span>, <span class="string">&quot;09876543211&quot;</span>])</span><br><span class="line">conn.commit()</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> admin;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span> password <span class="operator">|</span> mobile      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> mike     <span class="operator">|</span> abc123   <span class="operator">|</span> <span class="number">12345678901</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> Ann      <span class="operator">|</span> qwe456   <span class="operator">|</span> <span class="number">09876543211</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br></pre></td></tr></table></figure><ul><li>格式化发送指令（字典）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2. 格式化发送指令&#123;&#125;</span></span><br><span class="line">sql = <span class="string">&#x27;insert into admin(username,password,mobile) values(%(n1)s,%(n2)s,%(n3)s)&#x27;</span></span><br><span class="line">cursor.execute(sql, &#123;<span class="string">&quot;n1&quot;</span>:<span class="string">&quot;Cindy&quot;</span>, <span class="string">&quot;n2&quot;</span>:<span class="string">&quot;zxc789&quot;</span>, <span class="string">&quot;n3&quot;</span>:<span class="string">&quot;56473829101&quot;</span>&#125;)</span><br><span class="line">conn.commit()</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> admin;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span> password <span class="operator">|</span> mobile      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> mike     <span class="operator">|</span> abc123   <span class="operator">|</span> <span class="number">12345678901</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> Ann      <span class="operator">|</span> qwe456   <span class="operator">|</span> <span class="number">09876543211</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> Cindy    <span class="operator">|</span> zxc789   <span class="operator">|</span> <span class="number">56473829101</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br></pre></td></tr></table></figure><h5 id="4-3-2-在python终端动态创建">4.3.2 在python终端动态创建</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请输入信息，输入q退出&quot;</span>)</span><br><span class="line">    user = <span class="built_in">input</span>(<span class="string">&quot;用户名：&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> user == <span class="string">&quot;q&quot;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    pwd = <span class="built_in">input</span>(<span class="string">&quot;密码：&quot;</span>)</span><br><span class="line">    mobile = <span class="built_in">input</span>(<span class="string">&quot;电话号码：&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 链接mysql</span></span><br><span class="line">    conn = pymysql.connect(host=<span class="string">&quot;127.0.0.1&quot;</span>, port=<span class="number">3306</span>, user=<span class="string">&quot;root&quot;</span>, passwd=<span class="string">&quot;Silence2004&quot;</span>, charset=<span class="string">&#x27;utf8&#x27;</span>, db=<span class="string">&#x27;unicom&#x27;</span>)</span><br><span class="line">    cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 发送指令</span></span><br><span class="line">    sql = <span class="string">&#x27;insert into admin(username,password,mobile) values(%s,%s,%s)&#x27;</span></span><br><span class="line">    cursor.execute(sql, [user, pwd, mobile])</span><br><span class="line">    conn.commit()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3. 关闭链接</span></span><br><span class="line">    cursor.close()</span><br><span class="line">    conn.close()</span><br></pre></td></tr></table></figure><h5 id="4-3-3-查询数据">4.3.3 查询数据</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第1步和第3步不变</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第2步，发送指令</span></span><br><span class="line">cursor.execute(<span class="string">&quot;select * from admin&quot;</span>)  <span class="comment"># 指令就是mysql命令，格式和使用方式完全相同</span></span><br><span class="line">data_list = cursor.fetchall()</span><br><span class="line"><span class="built_in">print</span>(data_list)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># data_list</span></span><br><span class="line">[</span><br><span class="line"> &#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;mike&#x27;</span>, <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;abc123&#x27;</span>, <span class="string">&#x27;mobile&#x27;</span>: <span class="string">&#x27;12345678901&#x27;</span>&#125;, </span><br><span class="line"> &#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;Ann&#x27;</span>, <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;qwe456&#x27;</span>, <span class="string">&#x27;mobile&#x27;</span>: <span class="string">&#x27;09876543211&#x27;</span>&#125;, </span><br><span class="line"> &#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;Cindy&#x27;</span>, <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;zxc789&#x27;</span>, <span class="string">&#x27;mobile&#x27;</span>: <span class="string">&#x27;56473829101&#x27;</span>&#125;, </span><br><span class="line"> &#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;Kage&#x27;</span>, <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;slefln&#x27;</span>, <span class="string">&#x27;mobile&#x27;</span>: <span class="string">&#x27;1412344&#x27;</span>&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>格式化查询</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第2步，发送指令</span></span><br><span class="line">cursor.execute(<span class="string">&quot;select * from admin where id &gt; %s&quot;</span>, [<span class="number">2</span>, ])</span><br><span class="line">data_list = cursor.fetchall()</span><br><span class="line"><span class="built_in">print</span>(data_list)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line"> &#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;Ann&#x27;</span>, <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;qwe456&#x27;</span>, <span class="string">&#x27;mobile&#x27;</span>: <span class="string">&#x27;09876543211&#x27;</span>&#125;, </span><br><span class="line"> &#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;Cindy&#x27;</span>, <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;zxc789&#x27;</span>, <span class="string">&#x27;mobile&#x27;</span>: <span class="string">&#x27;56473829101&#x27;</span>&#125;, </span><br><span class="line"> &#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;Kage&#x27;</span>, <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;slefln&#x27;</span>, <span class="string">&#x27;mobile&#x27;</span>: <span class="string">&#x27;1412344&#x27;</span>&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>fetchone()</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第2步，发送指令</span></span><br><span class="line">cursor.execute(<span class="string">&quot;select * from admin where id &gt; %s&quot;</span>, [<span class="number">2</span>, ])</span><br><span class="line">res = cursor.fetchone()  <span class="comment"># 第一条数据</span></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;Ann&#x27;</span>, <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;qwe456&#x27;</span>, <span class="string">&#x27;mobile&#x27;</span>: <span class="string">&#x27;09876543211&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><h5 id="4-3-4-删除数据">4.3.4 删除数据</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第1步和第3步不变</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第2步，发送指令</span></span><br><span class="line">cursor.execute(<span class="string">&quot;delete from admin where id = %s&quot;</span>, [<span class="number">5</span>, ])</span><br><span class="line">conn.commit()</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> admin;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span> password <span class="operator">|</span> mobile      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> mike     <span class="operator">|</span> abc123   <span class="operator">|</span> <span class="number">12345678901</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> Ann      <span class="operator">|</span> qwe456   <span class="operator">|</span> <span class="number">09876543211</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> Cindy    <span class="operator">|</span> zxc789   <span class="operator">|</span> <span class="number">56473829101</span> <span class="operator">|</span>  <span class="comment">-- 删除</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> Kage     <span class="operator">|</span> slefln   <span class="operator">|</span> <span class="number">1412344</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> John     <span class="operator">|</span> adkadkaw <span class="operator">|</span> <span class="number">134231</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> admin;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span> password <span class="operator">|</span> mobile      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> mike     <span class="operator">|</span> abc123   <span class="operator">|</span> <span class="number">12345678901</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> Ann      <span class="operator">|</span> qwe456   <span class="operator">|</span> <span class="number">09876543211</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> Kage     <span class="operator">|</span> slefln   <span class="operator">|</span> <span class="number">1412344</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> John     <span class="operator">|</span> adkadkaw <span class="operator">|</span> <span class="number">134231</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br></pre></td></tr></table></figure><h5 id="4-3-5-修改数据">4.3.5 修改数据</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第1步和第3步不变</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第2步，发送指令</span></span><br><span class="line">cursor.execute(<span class="string">&quot;update admin set mobile=%s where id=%s&quot;</span>, [<span class="number">123</span>, <span class="number">1</span>, ])</span><br><span class="line">conn.commit()</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> admin;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span> password <span class="operator">|</span> mobile      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> mike     <span class="operator">|</span> abc123   <span class="operator">|</span> <span class="number">12345678901</span> <span class="operator">|</span>  <span class="comment">-- 修改前</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> Ann      <span class="operator">|</span> qwe456   <span class="operator">|</span> <span class="number">09876543211</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> Kage     <span class="operator">|</span> slefln   <span class="operator">|</span> <span class="number">1412344</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> John     <span class="operator">|</span> adkadkaw <span class="operator">|</span> <span class="number">134231</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> admin;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span> password <span class="operator">|</span> mobile      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> mike     <span class="operator">|</span> abc123   <span class="operator">|</span> <span class="number">123</span>         <span class="operator">|</span>  <span class="comment">-- 修改后</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> Ann      <span class="operator">|</span> qwe456   <span class="operator">|</span> <span class="number">09876543211</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> Kage     <span class="operator">|</span> slefln   <span class="operator">|</span> <span class="number">1412344</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> John     <span class="operator">|</span> adkadkaw <span class="operator">|</span> <span class="number">134231</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+-------------+</span></span><br></pre></td></tr></table></figure><h4 id="4-4-总结">4.4 总结</h4><ul><li>在<code>新增</code> <code>删除</code> <code>修改</code>一定要commit</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cursor.execute(<span class="string">&quot;..&quot;</span>)</span><br><span class="line">conn.commit()</span><br></pre></td></tr></table></figure><ul><li>在<code>查询</code>时，不需要commit，但要fetchall/fetchone</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cursor.execute(<span class="string">&quot;..&quot;</span>)</span><br><span class="line"><span class="comment"># 第一条数据，字典，无数据时是空列表</span></span><br><span class="line">ans1 = cursor.fetchone()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有数据，元素为字典的列表，无数据时是None</span></span><br><span class="line">ans2 = cursor.fetchall()</span><br></pre></td></tr></table></figure><ul><li>不要用python的字符串格式化，一定要execute</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cursor.execute(<span class="string">&quot;...%s   ...%s   ...%s&quot;</span>, [<span class="string">&quot;..&quot;</span>, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;..&quot;</span>, ])</span><br><span class="line">conn.commit()</span><br></pre></td></tr></table></figure><h3 id="5-案例：Flask-MySQL">5. 案例：Flask + MySQL</h3><h4 id="5-1-新增用户">5.1 新增用户</h4><ul><li>网页/add/user</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">action</span>=<span class="string">&quot;/add/user&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;mobile&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;手机号&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提 交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>python操作，链接mysql</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/add/user&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_user</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&quot;add_user.html&quot;</span>)</span><br><span class="line"></span><br><span class="line">    user = request.form.get(<span class="string">&quot;user&quot;</span>)</span><br><span class="line">    password = request.form.get(<span class="string">&quot;pwd&quot;</span>)</span><br><span class="line">    mobile = request.form.get(<span class="string">&quot;mobile&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 链接mysql</span></span><br><span class="line">    conn = pymysql.connect(host=<span class="string">&quot;127.0.0.1&quot;</span>, port=<span class="number">3306</span>, user=<span class="string">&quot;root&quot;</span>, passwd=<span class="string">&quot;&lt;PASSWORD&gt;&quot;</span>, charset=<span class="string">&#x27;utf8&#x27;</span>, db=<span class="string">&#x27;unicom&#x27;</span>)</span><br><span class="line">    cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 发送指令</span></span><br><span class="line">    sql = <span class="string">&quot;insert into admin(username,password,mobile) values(%s,%s,%s)&quot;</span></span><br><span class="line">    cursor.execute(sql, [user,password,mobile])</span><br><span class="line">    conn.commit()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3. 关闭链接</span></span><br><span class="line">    cursor.close()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;添加成功&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> admin;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> username <span class="operator">|</span> password <span class="operator">|</span> mobile <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span> somebody <span class="operator">|</span> <span class="number">123</span>      <span class="operator">|</span> <span class="number">12345</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------+----------+--------+</span></span><br></pre></td></tr></table></figure><h4 id="5-2-查询并输出到页面">5.2 查询并输出到页面</h4><ul><li>网页show/user</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>手机号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    &#123;% for item in data_list %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.id &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.username &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.password &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.mobile &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>python操作，赠加函数show_user</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/show/user&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_user</span>():</span><br><span class="line">    <span class="comment"># 1. 链接mysql</span></span><br><span class="line">    conn = pymysql.connect(host=<span class="string">&quot;127.0.0.1&quot;</span>, port=<span class="number">3306</span>, user=<span class="string">&quot;root&quot;</span>, passwd=<span class="string">&quot;&lt;PASSWORD&gt;&quot;</span>, charset=<span class="string">&#x27;utf8&#x27;</span>, db=<span class="string">&#x27;unicom&#x27;</span>)</span><br><span class="line">    cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 发送指令</span></span><br><span class="line">    sql = <span class="string">&quot;select * from admin&quot;</span></span><br><span class="line">    cursor.execute(sql)</span><br><span class="line">    data_list = cursor.fetchall()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3. 关闭链接</span></span><br><span class="line">    cursor.close()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;show_user.html&quot;</span>, data_list=data_list)</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240705%E4%B8%8B%E5%8D%8852806819.png" alt=""></p><p><img src="https://blog-iskage.oss-cn-hangzhou.aliyuncs.com/images/image-20240705%E4%B8%8B%E5%8D%8852855131.png" alt=""></p>]]></content>
    
    
    <summary type="html">MySQL入门：简单尝试</summary>
    
    
    
    <category term="MySQL" scheme="https://blog.iskage.online/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://blog.iskage.online/tags/MySQL/"/>
    
    <category term="SQL" scheme="https://blog.iskage.online/tags/SQL/"/>
    
    <category term="数据库" scheme="https://blog.iskage.online/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
</feed>
